graph(%image.1 : Float(3, 200, 400),
      %backbone.body.conv1.weight : Float(64, 3, 7, 7),
      %backbone.body.layer1.0.conv1.weight : Float(64, 64, 1, 1),
      %backbone.body.layer1.0.conv2.weight : Float(64, 64, 3, 3),
      %backbone.body.layer1.0.conv3.weight : Float(256, 64, 1, 1),
      %backbone.body.layer1.0.downsample.0.weight : Float(256, 64, 1, 1),
      %backbone.body.layer1.1.conv1.weight : Float(64, 256, 1, 1),
      %backbone.body.layer1.1.conv2.weight : Float(64, 64, 3, 3),
      %backbone.body.layer1.1.conv3.weight : Float(256, 64, 1, 1),
      %backbone.body.layer1.2.conv1.weight : Float(64, 256, 1, 1),
      %backbone.body.layer1.2.conv2.weight : Float(64, 64, 3, 3),
      %backbone.body.layer1.2.conv3.weight : Float(256, 64, 1, 1),
      %backbone.body.layer2.0.conv1.weight : Float(128, 256, 1, 1),
      %backbone.body.layer2.0.conv2.weight : Float(128, 128, 3, 3),
      %backbone.body.layer2.0.conv3.weight : Float(512, 128, 1, 1),
      %backbone.body.layer2.0.downsample.0.weight : Float(512, 256, 1, 1),
      %backbone.body.layer2.1.conv1.weight : Float(128, 512, 1, 1),
      %backbone.body.layer2.1.conv2.weight : Float(128, 128, 3, 3),
      %backbone.body.layer2.1.conv3.weight : Float(512, 128, 1, 1),
      %backbone.body.layer2.2.conv1.weight : Float(128, 512, 1, 1),
      %backbone.body.layer2.2.conv2.weight : Float(128, 128, 3, 3),
      %backbone.body.layer2.2.conv3.weight : Float(512, 128, 1, 1),
      %backbone.body.layer2.3.conv1.weight : Float(128, 512, 1, 1),
      %backbone.body.layer2.3.conv2.weight : Float(128, 128, 3, 3),
      %backbone.body.layer2.3.conv3.weight : Float(512, 128, 1, 1),
      %backbone.body.layer3.0.conv1.weight : Float(256, 512, 1, 1),
      %backbone.body.layer3.0.conv2.weight : Float(256, 256, 3, 3),
      %backbone.body.layer3.0.conv3.weight : Float(1024, 256, 1, 1),
      %backbone.body.layer3.0.downsample.0.weight : Float(1024, 512, 1, 1),
      %backbone.body.layer3.1.conv1.weight : Float(256, 1024, 1, 1),
      %backbone.body.layer3.1.conv2.weight : Float(256, 256, 3, 3),
      %backbone.body.layer3.1.conv3.weight : Float(1024, 256, 1, 1),
      %backbone.body.layer3.2.conv1.weight : Float(256, 1024, 1, 1),
      %backbone.body.layer3.2.conv2.weight : Float(256, 256, 3, 3),
      %backbone.body.layer3.2.conv3.weight : Float(1024, 256, 1, 1),
      %backbone.body.layer3.3.conv1.weight : Float(256, 1024, 1, 1),
      %backbone.body.layer3.3.conv2.weight : Float(256, 256, 3, 3),
      %backbone.body.layer3.3.conv3.weight : Float(1024, 256, 1, 1),
      %backbone.body.layer3.4.conv1.weight : Float(256, 1024, 1, 1),
      %backbone.body.layer3.4.conv2.weight : Float(256, 256, 3, 3),
      %backbone.body.layer3.4.conv3.weight : Float(1024, 256, 1, 1),
      %backbone.body.layer3.5.conv1.weight : Float(256, 1024, 1, 1),
      %backbone.body.layer3.5.conv2.weight : Float(256, 256, 3, 3),
      %backbone.body.layer3.5.conv3.weight : Float(1024, 256, 1, 1),
      %backbone.body.layer4.0.conv1.weight : Float(512, 1024, 1, 1),
      %backbone.body.layer4.0.conv2.weight : Float(512, 512, 3, 3),
      %backbone.body.layer4.0.conv3.weight : Float(2048, 512, 1, 1),
      %backbone.body.layer4.0.downsample.0.weight : Float(2048, 1024, 1, 1),
      %backbone.body.layer4.1.conv1.weight : Float(512, 2048, 1, 1),
      %backbone.body.layer4.1.conv2.weight : Float(512, 512, 3, 3),
      %backbone.body.layer4.1.conv3.weight : Float(2048, 512, 1, 1),
      %backbone.body.layer4.2.conv1.weight : Float(512, 2048, 1, 1),
      %backbone.body.layer4.2.conv2.weight : Float(512, 512, 3, 3),
      %backbone.body.layer4.2.conv3.weight : Float(2048, 512, 1, 1),
      %backbone.fpn.inner_blocks.0.weight : Float(256, 256, 1, 1),
      %backbone.fpn.inner_blocks.0.bias : Float(256),
      %backbone.fpn.inner_blocks.1.weight : Float(256, 512, 1, 1),
      %backbone.fpn.inner_blocks.1.bias : Float(256),
      %backbone.fpn.inner_blocks.2.weight : Float(256, 1024, 1, 1),
      %backbone.fpn.inner_blocks.2.bias : Float(256),
      %backbone.fpn.inner_blocks.3.weight : Float(256, 2048, 1, 1),
      %backbone.fpn.inner_blocks.3.bias : Float(256),
      %backbone.fpn.layer_blocks.0.weight : Float(256, 256, 3, 3),
      %backbone.fpn.layer_blocks.0.bias : Float(256),
      %backbone.fpn.layer_blocks.1.weight : Float(256, 256, 3, 3),
      %backbone.fpn.layer_blocks.1.bias : Float(256),
      %backbone.fpn.layer_blocks.2.weight : Float(256, 256, 3, 3),
      %backbone.fpn.layer_blocks.2.bias : Float(256),
      %backbone.fpn.layer_blocks.3.weight : Float(256, 256, 3, 3),
      %backbone.fpn.layer_blocks.3.bias : Float(256),
      %rpn.head.conv.weight : Float(256, 256, 3, 3),
      %rpn.head.conv.bias : Float(256),
      %rpn.head.cls_logits.weight : Float(3, 256, 1, 1),
      %rpn.head.cls_logits.bias : Float(3),
      %rpn.head.bbox_pred.weight : Float(12, 256, 1, 1),
      %rpn.head.bbox_pred.bias : Float(12),
      %2445 : Long(1),
      %2446 : Long(1),
      %2447 : Long(1),
      %2448 : Long(1),
      %2449 : Long(1),
      %2450 : Long(1),
      %2451 : Long(),
      %2453 : Float(1, 64, 1, 1),
      %2458 : Float(1, 64, 1, 1),
      %2459 : Float(1, 64, 1, 1),
      %2461 : Float(1, 64, 1, 1),
      %2466 : Float(1, 64, 1, 1),
      %2467 : Float(1, 64, 1, 1),
      %2469 : Float(1, 64, 1, 1),
      %2474 : Float(1, 64, 1, 1),
      %2475 : Float(1, 64, 1, 1),
      %2477 : Float(1, 256, 1, 1),
      %2482 : Float(1, 256, 1, 1),
      %2483 : Float(1, 256, 1, 1),
      %2485 : Float(1, 256, 1, 1),
      %2490 : Float(1, 256, 1, 1),
      %2491 : Float(1, 256, 1, 1),
      %2493 : Float(1, 64, 1, 1),
      %2498 : Float(1, 64, 1, 1),
      %2499 : Float(1, 64, 1, 1),
      %2501 : Float(1, 64, 1, 1),
      %2506 : Float(1, 64, 1, 1),
      %2507 : Float(1, 64, 1, 1),
      %2509 : Float(1, 256, 1, 1),
      %2514 : Float(1, 256, 1, 1),
      %2515 : Float(1, 256, 1, 1),
      %2517 : Float(1, 64, 1, 1),
      %2522 : Float(1, 64, 1, 1),
      %2523 : Float(1, 64, 1, 1),
      %2525 : Float(1, 64, 1, 1),
      %2530 : Float(1, 64, 1, 1),
      %2531 : Float(1, 64, 1, 1),
      %2533 : Float(1, 256, 1, 1),
      %2538 : Float(1, 256, 1, 1),
      %2539 : Float(1, 256, 1, 1),
      %2541 : Float(1, 128, 1, 1),
      %2546 : Float(1, 128, 1, 1),
      %2547 : Float(1, 128, 1, 1),
      %2549 : Float(1, 128, 1, 1),
      %2554 : Float(1, 128, 1, 1),
      %2555 : Float(1, 128, 1, 1),
      %2557 : Float(1, 512, 1, 1),
      %2562 : Float(1, 512, 1, 1),
      %2563 : Float(1, 512, 1, 1),
      %2565 : Float(1, 512, 1, 1),
      %2570 : Float(1, 512, 1, 1),
      %2571 : Float(1, 512, 1, 1),
      %2573 : Float(1, 128, 1, 1),
      %2578 : Float(1, 128, 1, 1),
      %2579 : Float(1, 128, 1, 1),
      %2581 : Float(1, 128, 1, 1),
      %2586 : Float(1, 128, 1, 1),
      %2587 : Float(1, 128, 1, 1),
      %2589 : Float(1, 512, 1, 1),
      %2594 : Float(1, 512, 1, 1),
      %2595 : Float(1, 512, 1, 1),
      %2597 : Float(1, 128, 1, 1),
      %2602 : Float(1, 128, 1, 1),
      %2603 : Float(1, 128, 1, 1),
      %2605 : Float(1, 128, 1, 1),
      %2610 : Float(1, 128, 1, 1),
      %2611 : Float(1, 128, 1, 1),
      %2613 : Float(1, 512, 1, 1),
      %2618 : Float(1, 512, 1, 1),
      %2619 : Float(1, 512, 1, 1),
      %2621 : Float(1, 128, 1, 1),
      %2626 : Float(1, 128, 1, 1),
      %2627 : Float(1, 128, 1, 1),
      %2629 : Float(1, 128, 1, 1),
      %2634 : Float(1, 128, 1, 1),
      %2635 : Float(1, 128, 1, 1),
      %2637 : Float(1, 512, 1, 1),
      %2642 : Float(1, 512, 1, 1),
      %2643 : Float(1, 512, 1, 1),
      %2645 : Float(1, 256, 1, 1),
      %2650 : Float(1, 256, 1, 1),
      %2651 : Float(1, 256, 1, 1),
      %2653 : Float(1, 256, 1, 1),
      %2658 : Float(1, 256, 1, 1),
      %2659 : Float(1, 256, 1, 1),
      %2661 : Float(1, 1024, 1, 1),
      %2666 : Float(1, 1024, 1, 1),
      %2667 : Float(1, 1024, 1, 1),
      %2669 : Float(1, 1024, 1, 1),
      %2674 : Float(1, 1024, 1, 1),
      %2675 : Float(1, 1024, 1, 1),
      %2677 : Float(1, 256, 1, 1),
      %2682 : Float(1, 256, 1, 1),
      %2683 : Float(1, 256, 1, 1),
      %2685 : Float(1, 256, 1, 1),
      %2690 : Float(1, 256, 1, 1),
      %2691 : Float(1, 256, 1, 1),
      %2693 : Float(1, 1024, 1, 1),
      %2698 : Float(1, 1024, 1, 1),
      %2699 : Float(1, 1024, 1, 1),
      %2701 : Float(1, 256, 1, 1),
      %2706 : Float(1, 256, 1, 1),
      %2707 : Float(1, 256, 1, 1),
      %2709 : Float(1, 256, 1, 1),
      %2714 : Float(1, 256, 1, 1),
      %2715 : Float(1, 256, 1, 1),
      %2717 : Float(1, 1024, 1, 1),
      %2722 : Float(1, 1024, 1, 1),
      %2723 : Float(1, 1024, 1, 1),
      %2725 : Float(1, 256, 1, 1),
      %2730 : Float(1, 256, 1, 1),
      %2731 : Float(1, 256, 1, 1),
      %2733 : Float(1, 256, 1, 1),
      %2738 : Float(1, 256, 1, 1),
      %2739 : Float(1, 256, 1, 1),
      %2741 : Float(1, 1024, 1, 1),
      %2746 : Float(1, 1024, 1, 1),
      %2747 : Float(1, 1024, 1, 1),
      %2749 : Float(1, 256, 1, 1),
      %2754 : Float(1, 256, 1, 1),
      %2755 : Float(1, 256, 1, 1),
      %2757 : Float(1, 256, 1, 1),
      %2762 : Float(1, 256, 1, 1),
      %2763 : Float(1, 256, 1, 1),
      %2765 : Float(1, 1024, 1, 1),
      %2770 : Float(1, 1024, 1, 1),
      %2771 : Float(1, 1024, 1, 1),
      %2773 : Float(1, 256, 1, 1),
      %2778 : Float(1, 256, 1, 1),
      %2779 : Float(1, 256, 1, 1),
      %2781 : Float(1, 256, 1, 1),
      %2786 : Float(1, 256, 1, 1),
      %2787 : Float(1, 256, 1, 1),
      %2789 : Float(1, 1024, 1, 1),
      %2794 : Float(1, 1024, 1, 1),
      %2795 : Float(1, 1024, 1, 1),
      %2797 : Float(1, 512, 1, 1),
      %2802 : Float(1, 512, 1, 1),
      %2803 : Float(1, 512, 1, 1),
      %2805 : Float(1, 512, 1, 1),
      %2810 : Float(1, 512, 1, 1),
      %2811 : Float(1, 512, 1, 1),
      %2813 : Float(1, 2048, 1, 1),
      %2818 : Float(1, 2048, 1, 1),
      %2819 : Float(1, 2048, 1, 1),
      %2821 : Float(1, 2048, 1, 1),
      %2826 : Float(1, 2048, 1, 1),
      %2827 : Float(1, 2048, 1, 1),
      %2829 : Float(1, 512, 1, 1),
      %2834 : Float(1, 512, 1, 1),
      %2835 : Float(1, 512, 1, 1),
      %2837 : Float(1, 512, 1, 1),
      %2842 : Float(1, 512, 1, 1),
      %2843 : Float(1, 512, 1, 1),
      %2845 : Float(1, 2048, 1, 1),
      %2850 : Float(1, 2048, 1, 1),
      %2851 : Float(1, 2048, 1, 1),
      %2853 : Float(1, 512, 1, 1),
      %2858 : Float(1, 512, 1, 1),
      %2859 : Float(1, 512, 1, 1),
      %2861 : Float(1, 512, 1, 1),
      %2866 : Float(1, 512, 1, 1),
      %2867 : Float(1, 512, 1, 1),
      %2869 : Float(1, 2048, 1, 1),
      %2874 : Float(1, 2048, 1, 1),
      %2875 : Float(1, 2048, 1, 1),
      %2876 : Float(),
      %2877 : Float(),
      %2878 : Float(),
      %2879 : Float(),
      %2880 : Float(),
      %2881 : Float(),
      %2882 : Float(),
      %2883 : Float(),
      %2884 : Float(),
      %2885 : Float(),
      %2886 : Float(),
      %2887 : Float(),
      %2888 : Float(),
      %2889 : Float(),
      %2890 : Float(),
      %2891 : Float(),
      %2892 : Float(),
      %2893 : Float(),
      %2894 : Float(),
      %2895 : Float(),
      %2896 : Long(1),
      %2897 : Long(1),
      %2898 : Long(1),
      %2899 : Long(1),
      %2900 : Long(1),
      %2901 : Long(1),
      %2902 : Long(1),
      %2903 : Long(1),
      %2904 : Long(1),
      %2905 : Long(1),
      %2906 : Long(1),
      %2907 : Long(1),
      %2908 : Long(1),
      %2909 : Long(1),
      %2910 : Long(1),
      %2911 : Long(1),
      %2912 : Long(1),
      %2913 : Long(1),
      %2914 : Long(1),
      %2915 : Long(1),
      %2916 : Long(1),
      %2917 : Long(1),
      %2918 : Long(1),
      %2919 : Long(1),
      %2920 : Long(1),
      %2921 : Long(1),
      %2922 : Long(1),
      %2923 : Long(1),
      %2924 : Long(1),
      %2925 : Long(1),
      %2926 : Long(1),
      %2927 : Float(),
      %2928 : Float(),
      %2929 : Long(1),
      %2930 : Long(1),
      %2931 : Long(1),
      %2932 : Long(1),
      %2933 : Long(1),
      %2934 : Float(),
      %2935 : Float(),
      %2936 : Float(),
      %2937 : Float(),
      %2938 : Float(),
      %2939 : Float(),
      %2940 : Long(1),
      %2941 : Long(1)):
  %296 : Float(3, 1, 1) = onnx::Constant[value=(1,.,.) =    0.4850  (2,.,.) =    0.4560  (3,.,.) =    0.4060 [ CPUFloatType{3,1,1} ]]()
  %297 : Float(3, 200, 400) = onnx::Sub(%image.1, %296) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:66:0
  %298 : Float(3, 1, 1) = onnx::Constant[value=(1,.,.) =    0.2290  (2,.,.) =    0.2240  (3,.,.) =    0.2250 [ CPUFloatType{3,1,1} ]]()
  %299 : Float(3, 200, 400) = onnx::Div(%297, %298) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:66:0
  %300 : Float(1, 3, 200, 400) = onnx::Unsqueeze[axes=[0]](%299) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:93:0
  %301 : Tensor = onnx::Shape(%300)
  %302 : Tensor = onnx::Constant[value={2}]()
  %303 : Long() = onnx::Gather[axis=0](%301, %302) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %304 : Float() = onnx::Cast[to=1](%303) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %305 : Float() = onnx::Constant[value={0.75}]()
  %306 : Float() = onnx::Mul(%304, %305)
  %307 : Float() = onnx::Cast[to=1](%306) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %308 : Float() = onnx::Floor(%307) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %309 : Tensor = onnx::Shape(%300)
  %310 : Tensor = onnx::Constant[value={3}]()
  %311 : Long() = onnx::Gather[axis=0](%309, %310) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %312 : Float() = onnx::Cast[to=1](%311) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %313 : Float() = onnx::Constant[value={0.75}]()
  %314 : Float() = onnx::Mul(%312, %313)
  %315 : Float() = onnx::Cast[to=1](%314) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %316 : Float() = onnx::Floor(%315) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2528:0
  %317 : Tensor = onnx::Unsqueeze[axes=[0]](%308)
  %318 : Tensor = onnx::Unsqueeze[axes=[0]](%316)
  %319 : Tensor = onnx::Concat[axis=0](%317, %318)
  %320 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %321 : Tensor = onnx::Shape(%300)
  %322 : Tensor = onnx::Constant[value={0}]()
  %323 : Tensor = onnx::Constant[value={0}]()
  %324 : Tensor = onnx::Constant[value={2}]()
  %325 : Tensor = onnx::Slice(%321, %323, %324, %322)
  %326 : Tensor = onnx::Cast[to=7](%319)
  %327 : Tensor = onnx::Concat[axis=0](%325, %326)
  %328 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %329 : Float(1, 3, 150, 300) = onnx::Resize[coordinate_transformation_mode="pytorch_half_pixel", cubic_coeff_a=-0.75, mode="linear", nearest_mode="floor"](%300, %320, %328, %327) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2575:0
  %330 : Tensor = onnx::Constant[value={0}]()
  %331 : Float(3, 150, 300) = onnx::Gather[axis=0](%329, %330) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:93:0
  %332 : Tensor = onnx::Shape(%331)
  %333 : Tensor = onnx::Constant[value={0}]()
  %334 : Long() = onnx::Gather[axis=0](%332, %333) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %335 : Tensor = onnx::Unsqueeze[axes=[0]](%334)
  %336 : Long(1) = onnx::Concat[axis=0](%335) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %337 : Float(1) = onnx::Cast[to=1](%336) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %338 : Float() = onnx::ReduceMax[keepdims=0](%337) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %339 : Long() = onnx::Cast[to=7](%338) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %340 : Tensor = onnx::Shape(%331)
  %341 : Tensor = onnx::Constant[value={1}]()
  %342 : Long() = onnx::Gather[axis=0](%340, %341) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %343 : Tensor = onnx::Unsqueeze[axes=[0]](%342)
  %344 : Long(1) = onnx::Concat[axis=0](%343) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %345 : Float(1) = onnx::Cast[to=1](%344) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %346 : Float() = onnx::ReduceMax[keepdims=0](%345) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %347 : Long() = onnx::Cast[to=7](%346) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %348 : Tensor = onnx::Shape(%331)
  %349 : Tensor = onnx::Constant[value={2}]()
  %350 : Long() = onnx::Gather[axis=0](%348, %349) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %351 : Tensor = onnx::Unsqueeze[axes=[0]](%350)
  %352 : Long(1) = onnx::Concat[axis=0](%351) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %353 : Float(1) = onnx::Cast[to=1](%352) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %354 : Float() = onnx::ReduceMax[keepdims=0](%353) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %355 : Long() = onnx::Cast[to=7](%354) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:120:0
  %356 : Float() = onnx::Cast[to=1](%347) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:123:0
  %357 : Float() = onnx::Constant[value={32}]()
  %358 : Float() = onnx::Div(%356, %357)
  %359 : Float() = onnx::Ceil(%358) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:123:0
  %360 : Float() = onnx::Constant[value={32}]()
  %361 : Float() = onnx::Mul(%359, %360)
  %362 : Long() = onnx::Cast[to=7](%361) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:123:0
  %363 : Float() = onnx::Cast[to=1](%355) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:124:0
  %364 : Float() = onnx::Constant[value={32}]()
  %365 : Float() = onnx::Div(%363, %364)
  %366 : Float() = onnx::Ceil(%365) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:124:0
  %367 : Float() = onnx::Constant[value={32}]()
  %368 : Float() = onnx::Mul(%366, %367)
  %369 : Long() = onnx::Cast[to=7](%368) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:124:0
  %370 : Tensor = onnx::Shape(%331)
  %371 : Tensor = onnx::Constant[value={0}]()
  %372 : Long() = onnx::Gather[axis=0](%370, %371) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:132:0
  %373 : Tensor = onnx::Shape(%331)
  %374 : Tensor = onnx::Constant[value={1}]()
  %375 : Long() = onnx::Gather[axis=0](%373, %374) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:132:0
  %376 : Tensor = onnx::Shape(%331)
  %377 : Tensor = onnx::Constant[value={2}]()
  %378 : Long() = onnx::Gather[axis=0](%376, %377) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:132:0
  %379 : Long() = onnx::Sub(%339, %372) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:132:0
  %380 : Long() = onnx::Sub(%362, %375) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:132:0
  %381 : Long() = onnx::Sub(%369, %378) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:132:0
  %386 : Tensor = onnx::Unsqueeze[axes=[0]](%381)
  %388 : Tensor = onnx::Unsqueeze[axes=[0]](%380)
  %390 : Tensor = onnx::Unsqueeze[axes=[0]](%379)
  %391 : Tensor = onnx::Concat[axis=0](%2445, %386, %2446, %388, %2447, %390)
  %393 : Tensor = onnx::Unsqueeze[axes=[0]](%381)
  %395 : Tensor = onnx::Unsqueeze[axes=[0]](%380)
  %397 : Tensor = onnx::Unsqueeze[axes=[0]](%379)
  %398 : Tensor = onnx::Concat[axis=0](%2448, %393, %2449, %395, %2450, %397)
  %399 : Tensor = onnx::Constant[value={0}]()
  %400 : Tensor = onnx::Shape(%391)
  %401 : Tensor = onnx::Gather[axis=0](%400, %399)
  %405 : LongTensor = onnx::Sub(%2451, %401)
  %406 : Tensor = onnx::Cast[to=7](%398)
  %407 : Tensor = onnx::ConstantOfShape[value={0}](%405)
  %408 : Tensor = onnx::Concat[axis=0](%406, %407)
  %409 : Tensor = onnx::Constant[value=-1  2 [ CPULongType{2} ]]()
  %410 : Tensor = onnx::Reshape(%408, %409)
  %411 : Tensor = onnx::Constant[value={0}]()
  %412 : Tensor = onnx::Constant[value={-1}]()
  %413 : Tensor = onnx::Constant[value={-9223372036854775807}]()
  %414 : Tensor = onnx::Constant[value={-1}]()
  %415 : Tensor = onnx::Slice(%410, %412, %413, %411, %414)
  %416 : Tensor = onnx::Transpose[perm=[1, 0]](%415)
  %417 : Tensor = onnx::Constant[value={-1}]()
  %418 : Tensor = onnx::Reshape(%416, %417)
  %419 : Tensor = onnx::Cast[to=7](%418)
  %420 : Tensor = onnx::Constant[value={0}]()
  %421 : Float(3, 160, 320) = onnx::Pad[mode="constant"](%331, %419, %420) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2908:0
  %422 : Tensor = onnx::Unsqueeze[axes=[0]](%421)
  %423 : Float(1, 3, 160, 320) = onnx::Concat[axis=0](%422) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/transform.py:136:0
  %424 : Float(1, 64, 80, 160) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[7, 7], pads=[3, 3, 3, 3], strides=[2, 2]](%423, %backbone.body.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %438 : Float(1, 64, 1, 1) = onnx::Sub(%2453, %2459) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %439 : Float(1, 64, 80, 160) = onnx::Mul(%424, %2458) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %440 : Float(1, 64, 80, 160) = onnx::Add(%439, %438) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %441 : Float(1, 64, 80, 160) = onnx::Relu(%440) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %442 : Float(1, 64, 40, 80) = onnx::MaxPool[ceil_mode=0, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%441) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:488:0
  %443 : Float(1, 64, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%442, %backbone.body.layer1.0.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %457 : Float(1, 64, 1, 1) = onnx::Sub(%2461, %2467) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %458 : Float(1, 64, 40, 80) = onnx::Mul(%443, %2466) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %459 : Float(1, 64, 40, 80) = onnx::Add(%458, %457) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %460 : Float(1, 64, 40, 80) = onnx::Relu(%459) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %461 : Float(1, 64, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%460, %backbone.body.layer1.0.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %475 : Float(1, 64, 1, 1) = onnx::Sub(%2469, %2475) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %476 : Float(1, 64, 40, 80) = onnx::Mul(%461, %2474) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %477 : Float(1, 64, 40, 80) = onnx::Add(%476, %475) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %478 : Float(1, 64, 40, 80) = onnx::Relu(%477) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %479 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%478, %backbone.body.layer1.0.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %493 : Float(1, 256, 1, 1) = onnx::Sub(%2477, %2483) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %494 : Float(1, 256, 40, 80) = onnx::Mul(%479, %2482) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %495 : Float(1, 256, 40, 80) = onnx::Add(%494, %493) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %496 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%442, %backbone.body.layer1.0.downsample.0.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %510 : Float(1, 256, 1, 1) = onnx::Sub(%2485, %2491) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %511 : Float(1, 256, 40, 80) = onnx::Mul(%496, %2490) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %512 : Float(1, 256, 40, 80) = onnx::Add(%511, %510) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %513 : Float(1, 256, 40, 80) = onnx::Add(%495, %512)
  %514 : Float(1, 256, 40, 80) = onnx::Relu(%513) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %515 : Float(1, 64, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%514, %backbone.body.layer1.1.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %529 : Float(1, 64, 1, 1) = onnx::Sub(%2493, %2499) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %530 : Float(1, 64, 40, 80) = onnx::Mul(%515, %2498) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %531 : Float(1, 64, 40, 80) = onnx::Add(%530, %529) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %532 : Float(1, 64, 40, 80) = onnx::Relu(%531) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %533 : Float(1, 64, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%532, %backbone.body.layer1.1.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %547 : Float(1, 64, 1, 1) = onnx::Sub(%2501, %2507) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %548 : Float(1, 64, 40, 80) = onnx::Mul(%533, %2506) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %549 : Float(1, 64, 40, 80) = onnx::Add(%548, %547) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %550 : Float(1, 64, 40, 80) = onnx::Relu(%549) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %551 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%550, %backbone.body.layer1.1.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %565 : Float(1, 256, 1, 1) = onnx::Sub(%2509, %2515) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %566 : Float(1, 256, 40, 80) = onnx::Mul(%551, %2514) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %567 : Float(1, 256, 40, 80) = onnx::Add(%566, %565) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %568 : Float(1, 256, 40, 80) = onnx::Add(%567, %514)
  %569 : Float(1, 256, 40, 80) = onnx::Relu(%568) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %570 : Float(1, 64, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%569, %backbone.body.layer1.2.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %584 : Float(1, 64, 1, 1) = onnx::Sub(%2517, %2523) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %585 : Float(1, 64, 40, 80) = onnx::Mul(%570, %2522) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %586 : Float(1, 64, 40, 80) = onnx::Add(%585, %584) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %587 : Float(1, 64, 40, 80) = onnx::Relu(%586) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %588 : Float(1, 64, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%587, %backbone.body.layer1.2.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %602 : Float(1, 64, 1, 1) = onnx::Sub(%2525, %2531) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %603 : Float(1, 64, 40, 80) = onnx::Mul(%588, %2530) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %604 : Float(1, 64, 40, 80) = onnx::Add(%603, %602) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %605 : Float(1, 64, 40, 80) = onnx::Relu(%604) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %606 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%605, %backbone.body.layer1.2.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %620 : Float(1, 256, 1, 1) = onnx::Sub(%2533, %2539) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %621 : Float(1, 256, 40, 80) = onnx::Mul(%606, %2538) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %622 : Float(1, 256, 40, 80) = onnx::Add(%621, %620) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %623 : Float(1, 256, 40, 80) = onnx::Add(%622, %569)
  %624 : Float(1, 256, 40, 80) = onnx::Relu(%623) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %625 : Float(1, 128, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%624, %backbone.body.layer2.0.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %639 : Float(1, 128, 1, 1) = onnx::Sub(%2541, %2547) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %640 : Float(1, 128, 40, 80) = onnx::Mul(%625, %2546) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %641 : Float(1, 128, 40, 80) = onnx::Add(%640, %639) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %642 : Float(1, 128, 40, 80) = onnx::Relu(%641) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %643 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%642, %backbone.body.layer2.0.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %657 : Float(1, 128, 1, 1) = onnx::Sub(%2549, %2555) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %658 : Float(1, 128, 20, 40) = onnx::Mul(%643, %2554) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %659 : Float(1, 128, 20, 40) = onnx::Add(%658, %657) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %660 : Float(1, 128, 20, 40) = onnx::Relu(%659) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %661 : Float(1, 512, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%660, %backbone.body.layer2.0.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %675 : Float(1, 512, 1, 1) = onnx::Sub(%2557, %2563) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %676 : Float(1, 512, 20, 40) = onnx::Mul(%661, %2562) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %677 : Float(1, 512, 20, 40) = onnx::Add(%676, %675) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %678 : Float(1, 512, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%624, %backbone.body.layer2.0.downsample.0.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %692 : Float(1, 512, 1, 1) = onnx::Sub(%2565, %2571) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %693 : Float(1, 512, 20, 40) = onnx::Mul(%678, %2570) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %694 : Float(1, 512, 20, 40) = onnx::Add(%693, %692) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %695 : Float(1, 512, 20, 40) = onnx::Add(%677, %694)
  %696 : Float(1, 512, 20, 40) = onnx::Relu(%695) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %697 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%696, %backbone.body.layer2.1.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %711 : Float(1, 128, 1, 1) = onnx::Sub(%2573, %2579) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %712 : Float(1, 128, 20, 40) = onnx::Mul(%697, %2578) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %713 : Float(1, 128, 20, 40) = onnx::Add(%712, %711) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %714 : Float(1, 128, 20, 40) = onnx::Relu(%713) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %715 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%714, %backbone.body.layer2.1.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %729 : Float(1, 128, 1, 1) = onnx::Sub(%2581, %2587) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %730 : Float(1, 128, 20, 40) = onnx::Mul(%715, %2586) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %731 : Float(1, 128, 20, 40) = onnx::Add(%730, %729) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %732 : Float(1, 128, 20, 40) = onnx::Relu(%731) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %733 : Float(1, 512, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%732, %backbone.body.layer2.1.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %747 : Float(1, 512, 1, 1) = onnx::Sub(%2589, %2595) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %748 : Float(1, 512, 20, 40) = onnx::Mul(%733, %2594) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %749 : Float(1, 512, 20, 40) = onnx::Add(%748, %747) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %750 : Float(1, 512, 20, 40) = onnx::Add(%749, %696)
  %751 : Float(1, 512, 20, 40) = onnx::Relu(%750) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %752 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%751, %backbone.body.layer2.2.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %766 : Float(1, 128, 1, 1) = onnx::Sub(%2597, %2603) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %767 : Float(1, 128, 20, 40) = onnx::Mul(%752, %2602) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %768 : Float(1, 128, 20, 40) = onnx::Add(%767, %766) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %769 : Float(1, 128, 20, 40) = onnx::Relu(%768) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %770 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%769, %backbone.body.layer2.2.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %784 : Float(1, 128, 1, 1) = onnx::Sub(%2605, %2611) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %785 : Float(1, 128, 20, 40) = onnx::Mul(%770, %2610) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %786 : Float(1, 128, 20, 40) = onnx::Add(%785, %784) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %787 : Float(1, 128, 20, 40) = onnx::Relu(%786) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %788 : Float(1, 512, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%787, %backbone.body.layer2.2.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %802 : Float(1, 512, 1, 1) = onnx::Sub(%2613, %2619) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %803 : Float(1, 512, 20, 40) = onnx::Mul(%788, %2618) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %804 : Float(1, 512, 20, 40) = onnx::Add(%803, %802) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %805 : Float(1, 512, 20, 40) = onnx::Add(%804, %751)
  %806 : Float(1, 512, 20, 40) = onnx::Relu(%805) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %807 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%806, %backbone.body.layer2.3.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %821 : Float(1, 128, 1, 1) = onnx::Sub(%2621, %2627) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %822 : Float(1, 128, 20, 40) = onnx::Mul(%807, %2626) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %823 : Float(1, 128, 20, 40) = onnx::Add(%822, %821) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %824 : Float(1, 128, 20, 40) = onnx::Relu(%823) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %825 : Float(1, 128, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%824, %backbone.body.layer2.3.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %839 : Float(1, 128, 1, 1) = onnx::Sub(%2629, %2635) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %840 : Float(1, 128, 20, 40) = onnx::Mul(%825, %2634) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %841 : Float(1, 128, 20, 40) = onnx::Add(%840, %839) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %842 : Float(1, 128, 20, 40) = onnx::Relu(%841) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %843 : Float(1, 512, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%842, %backbone.body.layer2.3.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %857 : Float(1, 512, 1, 1) = onnx::Sub(%2637, %2643) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %858 : Float(1, 512, 20, 40) = onnx::Mul(%843, %2642) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %859 : Float(1, 512, 20, 40) = onnx::Add(%858, %857) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %860 : Float(1, 512, 20, 40) = onnx::Add(%859, %806)
  %861 : Float(1, 512, 20, 40) = onnx::Relu(%860) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %862 : Float(1, 256, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%861, %backbone.body.layer3.0.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %876 : Float(1, 256, 1, 1) = onnx::Sub(%2645, %2651) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %877 : Float(1, 256, 20, 40) = onnx::Mul(%862, %2650) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %878 : Float(1, 256, 20, 40) = onnx::Add(%877, %876) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %879 : Float(1, 256, 20, 40) = onnx::Relu(%878) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %880 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%879, %backbone.body.layer3.0.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %894 : Float(1, 256, 1, 1) = onnx::Sub(%2653, %2659) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %895 : Float(1, 256, 10, 20) = onnx::Mul(%880, %2658) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %896 : Float(1, 256, 10, 20) = onnx::Add(%895, %894) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %897 : Float(1, 256, 10, 20) = onnx::Relu(%896) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %898 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%897, %backbone.body.layer3.0.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %912 : Float(1, 1024, 1, 1) = onnx::Sub(%2661, %2667) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %913 : Float(1, 1024, 10, 20) = onnx::Mul(%898, %2666) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %914 : Float(1, 1024, 10, 20) = onnx::Add(%913, %912) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %915 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%861, %backbone.body.layer3.0.downsample.0.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %929 : Float(1, 1024, 1, 1) = onnx::Sub(%2669, %2675) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %930 : Float(1, 1024, 10, 20) = onnx::Mul(%915, %2674) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %931 : Float(1, 1024, 10, 20) = onnx::Add(%930, %929) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %932 : Float(1, 1024, 10, 20) = onnx::Add(%914, %931)
  %933 : Float(1, 1024, 10, 20) = onnx::Relu(%932) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %934 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%933, %backbone.body.layer3.1.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %948 : Float(1, 256, 1, 1) = onnx::Sub(%2677, %2683) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %949 : Float(1, 256, 10, 20) = onnx::Mul(%934, %2682) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %950 : Float(1, 256, 10, 20) = onnx::Add(%949, %948) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %951 : Float(1, 256, 10, 20) = onnx::Relu(%950) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %952 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%951, %backbone.body.layer3.1.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %966 : Float(1, 256, 1, 1) = onnx::Sub(%2685, %2691) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %967 : Float(1, 256, 10, 20) = onnx::Mul(%952, %2690) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %968 : Float(1, 256, 10, 20) = onnx::Add(%967, %966) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %969 : Float(1, 256, 10, 20) = onnx::Relu(%968) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %970 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%969, %backbone.body.layer3.1.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %984 : Float(1, 1024, 1, 1) = onnx::Sub(%2693, %2699) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %985 : Float(1, 1024, 10, 20) = onnx::Mul(%970, %2698) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %986 : Float(1, 1024, 10, 20) = onnx::Add(%985, %984) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %987 : Float(1, 1024, 10, 20) = onnx::Add(%986, %933)
  %988 : Float(1, 1024, 10, 20) = onnx::Relu(%987) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %989 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%988, %backbone.body.layer3.2.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1003 : Float(1, 256, 1, 1) = onnx::Sub(%2701, %2707) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1004 : Float(1, 256, 10, 20) = onnx::Mul(%989, %2706) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1005 : Float(1, 256, 10, 20) = onnx::Add(%1004, %1003) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1006 : Float(1, 256, 10, 20) = onnx::Relu(%1005) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1007 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1006, %backbone.body.layer3.2.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1021 : Float(1, 256, 1, 1) = onnx::Sub(%2709, %2715) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1022 : Float(1, 256, 10, 20) = onnx::Mul(%1007, %2714) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1023 : Float(1, 256, 10, 20) = onnx::Add(%1022, %1021) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1024 : Float(1, 256, 10, 20) = onnx::Relu(%1023) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1025 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1024, %backbone.body.layer3.2.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1039 : Float(1, 1024, 1, 1) = onnx::Sub(%2717, %2723) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1040 : Float(1, 1024, 10, 20) = onnx::Mul(%1025, %2722) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1041 : Float(1, 1024, 10, 20) = onnx::Add(%1040, %1039) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1042 : Float(1, 1024, 10, 20) = onnx::Add(%1041, %988)
  %1043 : Float(1, 1024, 10, 20) = onnx::Relu(%1042) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1044 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1043, %backbone.body.layer3.3.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1058 : Float(1, 256, 1, 1) = onnx::Sub(%2725, %2731) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1059 : Float(1, 256, 10, 20) = onnx::Mul(%1044, %2730) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1060 : Float(1, 256, 10, 20) = onnx::Add(%1059, %1058) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1061 : Float(1, 256, 10, 20) = onnx::Relu(%1060) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1062 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1061, %backbone.body.layer3.3.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1076 : Float(1, 256, 1, 1) = onnx::Sub(%2733, %2739) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1077 : Float(1, 256, 10, 20) = onnx::Mul(%1062, %2738) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1078 : Float(1, 256, 10, 20) = onnx::Add(%1077, %1076) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1079 : Float(1, 256, 10, 20) = onnx::Relu(%1078) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1080 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1079, %backbone.body.layer3.3.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1094 : Float(1, 1024, 1, 1) = onnx::Sub(%2741, %2747) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1095 : Float(1, 1024, 10, 20) = onnx::Mul(%1080, %2746) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1096 : Float(1, 1024, 10, 20) = onnx::Add(%1095, %1094) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1097 : Float(1, 1024, 10, 20) = onnx::Add(%1096, %1043)
  %1098 : Float(1, 1024, 10, 20) = onnx::Relu(%1097) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1099 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1098, %backbone.body.layer3.4.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1113 : Float(1, 256, 1, 1) = onnx::Sub(%2749, %2755) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1114 : Float(1, 256, 10, 20) = onnx::Mul(%1099, %2754) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1115 : Float(1, 256, 10, 20) = onnx::Add(%1114, %1113) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1116 : Float(1, 256, 10, 20) = onnx::Relu(%1115) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1117 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1116, %backbone.body.layer3.4.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1131 : Float(1, 256, 1, 1) = onnx::Sub(%2757, %2763) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1132 : Float(1, 256, 10, 20) = onnx::Mul(%1117, %2762) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1133 : Float(1, 256, 10, 20) = onnx::Add(%1132, %1131) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1134 : Float(1, 256, 10, 20) = onnx::Relu(%1133) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1135 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1134, %backbone.body.layer3.4.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1149 : Float(1, 1024, 1, 1) = onnx::Sub(%2765, %2771) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1150 : Float(1, 1024, 10, 20) = onnx::Mul(%1135, %2770) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1151 : Float(1, 1024, 10, 20) = onnx::Add(%1150, %1149) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1152 : Float(1, 1024, 10, 20) = onnx::Add(%1151, %1098)
  %1153 : Float(1, 1024, 10, 20) = onnx::Relu(%1152) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1154 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1153, %backbone.body.layer3.5.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1168 : Float(1, 256, 1, 1) = onnx::Sub(%2773, %2779) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1169 : Float(1, 256, 10, 20) = onnx::Mul(%1154, %2778) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1170 : Float(1, 256, 10, 20) = onnx::Add(%1169, %1168) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1171 : Float(1, 256, 10, 20) = onnx::Relu(%1170) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1172 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1171, %backbone.body.layer3.5.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1186 : Float(1, 256, 1, 1) = onnx::Sub(%2781, %2787) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1187 : Float(1, 256, 10, 20) = onnx::Mul(%1172, %2786) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1188 : Float(1, 256, 10, 20) = onnx::Add(%1187, %1186) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1189 : Float(1, 256, 10, 20) = onnx::Relu(%1188) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1190 : Float(1, 1024, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1189, %backbone.body.layer3.5.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1204 : Float(1, 1024, 1, 1) = onnx::Sub(%2789, %2795) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1205 : Float(1, 1024, 10, 20) = onnx::Mul(%1190, %2794) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1206 : Float(1, 1024, 10, 20) = onnx::Add(%1205, %1204) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1207 : Float(1, 1024, 10, 20) = onnx::Add(%1206, %1153)
  %1208 : Float(1, 1024, 10, 20) = onnx::Relu(%1207) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1209 : Float(1, 512, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1208, %backbone.body.layer4.0.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1223 : Float(1, 512, 1, 1) = onnx::Sub(%2797, %2803) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1224 : Float(1, 512, 10, 20) = onnx::Mul(%1209, %2802) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1225 : Float(1, 512, 10, 20) = onnx::Add(%1224, %1223) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1226 : Float(1, 512, 10, 20) = onnx::Relu(%1225) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1227 : Float(1, 512, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%1226, %backbone.body.layer4.0.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1241 : Float(1, 512, 1, 1) = onnx::Sub(%2805, %2811) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1242 : Float(1, 512, 5, 10) = onnx::Mul(%1227, %2810) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1243 : Float(1, 512, 5, 10) = onnx::Add(%1242, %1241) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1244 : Float(1, 512, 5, 10) = onnx::Relu(%1243) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1245 : Float(1, 2048, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1244, %backbone.body.layer4.0.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1259 : Float(1, 2048, 1, 1) = onnx::Sub(%2813, %2819) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1260 : Float(1, 2048, 5, 10) = onnx::Mul(%1245, %2818) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1261 : Float(1, 2048, 5, 10) = onnx::Add(%1260, %1259) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1262 : Float(1, 2048, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%1208, %backbone.body.layer4.0.downsample.0.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1276 : Float(1, 2048, 1, 1) = onnx::Sub(%2821, %2827) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1277 : Float(1, 2048, 5, 10) = onnx::Mul(%1262, %2826) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1278 : Float(1, 2048, 5, 10) = onnx::Add(%1277, %1276) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1279 : Float(1, 2048, 5, 10) = onnx::Add(%1261, %1278)
  %1280 : Float(1, 2048, 5, 10) = onnx::Relu(%1279) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1281 : Float(1, 512, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1280, %backbone.body.layer4.1.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1295 : Float(1, 512, 1, 1) = onnx::Sub(%2829, %2835) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1296 : Float(1, 512, 5, 10) = onnx::Mul(%1281, %2834) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1297 : Float(1, 512, 5, 10) = onnx::Add(%1296, %1295) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1298 : Float(1, 512, 5, 10) = onnx::Relu(%1297) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1299 : Float(1, 512, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1298, %backbone.body.layer4.1.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1313 : Float(1, 512, 1, 1) = onnx::Sub(%2837, %2843) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1314 : Float(1, 512, 5, 10) = onnx::Mul(%1299, %2842) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1315 : Float(1, 512, 5, 10) = onnx::Add(%1314, %1313) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1316 : Float(1, 512, 5, 10) = onnx::Relu(%1315) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1317 : Float(1, 2048, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1316, %backbone.body.layer4.1.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1331 : Float(1, 2048, 1, 1) = onnx::Sub(%2845, %2851) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1332 : Float(1, 2048, 5, 10) = onnx::Mul(%1317, %2850) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1333 : Float(1, 2048, 5, 10) = onnx::Add(%1332, %1331) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1334 : Float(1, 2048, 5, 10) = onnx::Add(%1333, %1280)
  %1335 : Float(1, 2048, 5, 10) = onnx::Relu(%1334) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1336 : Float(1, 512, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1335, %backbone.body.layer4.2.conv1.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1350 : Float(1, 512, 1, 1) = onnx::Sub(%2853, %2859) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1351 : Float(1, 512, 5, 10) = onnx::Mul(%1336, %2858) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1352 : Float(1, 512, 5, 10) = onnx::Add(%1351, %1350) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1353 : Float(1, 512, 5, 10) = onnx::Relu(%1352) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1354 : Float(1, 512, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1353, %backbone.body.layer4.2.conv2.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1368 : Float(1, 512, 1, 1) = onnx::Sub(%2861, %2867) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1369 : Float(1, 512, 5, 10) = onnx::Mul(%1354, %2866) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1370 : Float(1, 512, 5, 10) = onnx::Add(%1369, %1368) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1371 : Float(1, 512, 5, 10) = onnx::Relu(%1370) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1372 : Float(1, 2048, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1371, %backbone.body.layer4.2.conv3.weight) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1386 : Float(1, 2048, 1, 1) = onnx::Sub(%2869, %2875) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:141:0
  %1387 : Float(1, 2048, 5, 10) = onnx::Mul(%1372, %2874) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1388 : Float(1, 2048, 5, 10) = onnx::Add(%1387, %1386) # /home/lahaidar/clean_forsk_vision/torchvision/ops/misc.py:142:0
  %1389 : Float(1, 2048, 5, 10) = onnx::Add(%1388, %1335)
  %1390 : Float(1, 2048, 5, 10) = onnx::Relu(%1389) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:912:0
  %1391 : Float(1, 256, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1390, %backbone.fpn.inner_blocks.3.weight, %backbone.fpn.inner_blocks.3.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1392 : Float(1, 256, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1391, %backbone.fpn.layer_blocks.3.weight, %backbone.fpn.layer_blocks.3.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1393 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1208, %backbone.fpn.inner_blocks.2.weight, %backbone.fpn.inner_blocks.2.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1394 : Tensor = onnx::Shape(%1393)
  %1395 : Tensor = onnx::Constant[value={2}]()
  %1396 : Long() = onnx::Gather[axis=0](%1394, %1395) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:129:0
  %1397 : Tensor = onnx::Shape(%1393)
  %1398 : Tensor = onnx::Constant[value={3}]()
  %1399 : Long() = onnx::Gather[axis=0](%1397, %1398) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:129:0
  %1400 : Tensor = onnx::Unsqueeze[axes=[0]](%1396)
  %1401 : Tensor = onnx::Unsqueeze[axes=[0]](%1399)
  %1402 : Tensor = onnx::Concat[axis=0](%1400, %1401)
  %1403 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %1404 : Tensor = onnx::Shape(%1391)
  %1405 : Tensor = onnx::Constant[value={0}]()
  %1406 : Tensor = onnx::Constant[value={0}]()
  %1407 : Tensor = onnx::Constant[value={2}]()
  %1408 : Tensor = onnx::Slice(%1404, %1406, %1407, %1405)
  %1409 : Tensor = onnx::Cast[to=7](%1402)
  %1410 : Tensor = onnx::Concat[axis=0](%1408, %1409)
  %1411 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %1412 : Float(1, 256, 10, 20) = onnx::Resize[coordinate_transformation_mode="asymmetric", cubic_coeff_a=-0.75, mode="nearest", nearest_mode="floor"](%1391, %1403, %1411, %1410) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2556:0
  %1413 : Float(1, 256, 10, 20) = onnx::Add(%1393, %1412) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:131:0
  %1414 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1413, %backbone.fpn.layer_blocks.2.weight, %backbone.fpn.layer_blocks.2.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1415 : Float(1, 256, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%861, %backbone.fpn.inner_blocks.1.weight, %backbone.fpn.inner_blocks.1.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1416 : Tensor = onnx::Shape(%1415)
  %1417 : Tensor = onnx::Constant[value={2}]()
  %1418 : Long() = onnx::Gather[axis=0](%1416, %1417) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:129:0
  %1419 : Tensor = onnx::Shape(%1415)
  %1420 : Tensor = onnx::Constant[value={3}]()
  %1421 : Long() = onnx::Gather[axis=0](%1419, %1420) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:129:0
  %1422 : Tensor = onnx::Unsqueeze[axes=[0]](%1418)
  %1423 : Tensor = onnx::Unsqueeze[axes=[0]](%1421)
  %1424 : Tensor = onnx::Concat[axis=0](%1422, %1423)
  %1425 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %1426 : Tensor = onnx::Shape(%1413)
  %1427 : Tensor = onnx::Constant[value={0}]()
  %1428 : Tensor = onnx::Constant[value={0}]()
  %1429 : Tensor = onnx::Constant[value={2}]()
  %1430 : Tensor = onnx::Slice(%1426, %1428, %1429, %1427)
  %1431 : Tensor = onnx::Cast[to=7](%1424)
  %1432 : Tensor = onnx::Concat[axis=0](%1430, %1431)
  %1433 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %1434 : Float(1, 256, 20, 40) = onnx::Resize[coordinate_transformation_mode="asymmetric", cubic_coeff_a=-0.75, mode="nearest", nearest_mode="floor"](%1413, %1425, %1433, %1432) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2556:0
  %1435 : Float(1, 256, 20, 40) = onnx::Add(%1415, %1434) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:131:0
  %1436 : Float(1, 256, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1435, %backbone.fpn.layer_blocks.1.weight, %backbone.fpn.layer_blocks.1.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1437 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%624, %backbone.fpn.inner_blocks.0.weight, %backbone.fpn.inner_blocks.0.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1438 : Tensor = onnx::Shape(%1437)
  %1439 : Tensor = onnx::Constant[value={2}]()
  %1440 : Long() = onnx::Gather[axis=0](%1438, %1439) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:129:0
  %1441 : Tensor = onnx::Shape(%1437)
  %1442 : Tensor = onnx::Constant[value={3}]()
  %1443 : Long() = onnx::Gather[axis=0](%1441, %1442) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:129:0
  %1444 : Tensor = onnx::Unsqueeze[axes=[0]](%1440)
  %1445 : Tensor = onnx::Unsqueeze[axes=[0]](%1443)
  %1446 : Tensor = onnx::Concat[axis=0](%1444, %1445)
  %1447 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %1448 : Tensor = onnx::Shape(%1435)
  %1449 : Tensor = onnx::Constant[value={0}]()
  %1450 : Tensor = onnx::Constant[value={0}]()
  %1451 : Tensor = onnx::Constant[value={2}]()
  %1452 : Tensor = onnx::Slice(%1448, %1450, %1451, %1449)
  %1453 : Tensor = onnx::Cast[to=7](%1446)
  %1454 : Tensor = onnx::Concat[axis=0](%1452, %1453)
  %1455 : Tensor = onnx::Constant[value=[ CPUFloatType{0} ]]()
  %1456 : Float(1, 256, 40, 80) = onnx::Resize[coordinate_transformation_mode="asymmetric", cubic_coeff_a=-0.75, mode="nearest", nearest_mode="floor"](%1435, %1447, %1455, %1454) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:2556:0
  %1457 : Float(1, 256, 40, 80) = onnx::Add(%1437, %1456) # /home/lahaidar/clean_forsk_vision/torchvision/ops/feature_pyramid_network.py:131:0
  %1458 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1457, %backbone.fpn.layer_blocks.0.weight, %backbone.fpn.layer_blocks.0.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1459 : Float(1, 256, 3, 5) = onnx::MaxPool[ceil_mode=0, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%1392) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:488:0
  %1460 : Float(1, 256, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1458, %rpn.head.conv.weight, %rpn.head.conv.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1461 : Float(1, 256, 40, 80) = onnx::Relu(%1460) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:914:0
  %1462 : Float(1, 3, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1461, %rpn.head.cls_logits.weight, %rpn.head.cls_logits.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1463 : Float(1, 12, 40, 80) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1461, %rpn.head.bbox_pred.weight, %rpn.head.bbox_pred.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1464 : Float(1, 256, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1436, %rpn.head.conv.weight, %rpn.head.conv.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1465 : Float(1, 256, 20, 40) = onnx::Relu(%1464) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:914:0
  %1466 : Float(1, 3, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1465, %rpn.head.cls_logits.weight, %rpn.head.cls_logits.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1467 : Float(1, 12, 20, 40) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1465, %rpn.head.bbox_pred.weight, %rpn.head.bbox_pred.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1468 : Float(1, 256, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1414, %rpn.head.conv.weight, %rpn.head.conv.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1469 : Float(1, 256, 10, 20) = onnx::Relu(%1468) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:914:0
  %1470 : Float(1, 3, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1469, %rpn.head.cls_logits.weight, %rpn.head.cls_logits.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1471 : Float(1, 12, 10, 20) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1469, %rpn.head.bbox_pred.weight, %rpn.head.bbox_pred.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1472 : Float(1, 256, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1392, %rpn.head.conv.weight, %rpn.head.conv.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1473 : Float(1, 256, 5, 10) = onnx::Relu(%1472) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:914:0
  %1474 : Float(1, 3, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1473, %rpn.head.cls_logits.weight, %rpn.head.cls_logits.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1475 : Float(1, 12, 5, 10) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1473, %rpn.head.bbox_pred.weight, %rpn.head.bbox_pred.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1476 : Float(1, 256, 3, 5) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%1459, %rpn.head.conv.weight, %rpn.head.conv.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1477 : Float(1, 256, 3, 5) = onnx::Relu(%1476) # /home/lahaidar/lara_pytorch/torch/nn/functional.py:914:0
  %1478 : Float(1, 3, 3, 5) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1477, %rpn.head.cls_logits.weight, %rpn.head.cls_logits.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1479 : Float(1, 12, 3, 5) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[1, 1]](%1477, %rpn.head.bbox_pred.weight, %rpn.head.bbox_pred.bias) # /home/lahaidar/lara_pytorch/torch/nn/modules/conv.py:345:0
  %1480 : Tensor = onnx::Shape(%1458)
  %1481 : Tensor = onnx::Constant[value={2}]()
  %1482 : Long() = onnx::Gather[axis=0](%1480, %1481) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1483 : Tensor = onnx::Shape(%1458)
  %1484 : Tensor = onnx::Constant[value={3}]()
  %1485 : Long() = onnx::Gather[axis=0](%1483, %1484) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1486 : Tensor = onnx::Shape(%1436)
  %1487 : Tensor = onnx::Constant[value={2}]()
  %1488 : Long() = onnx::Gather[axis=0](%1486, %1487) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1489 : Tensor = onnx::Shape(%1436)
  %1490 : Tensor = onnx::Constant[value={3}]()
  %1491 : Long() = onnx::Gather[axis=0](%1489, %1490) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1492 : Tensor = onnx::Shape(%1414)
  %1493 : Tensor = onnx::Constant[value={2}]()
  %1494 : Long() = onnx::Gather[axis=0](%1492, %1493) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1495 : Tensor = onnx::Shape(%1414)
  %1496 : Tensor = onnx::Constant[value={3}]()
  %1497 : Long() = onnx::Gather[axis=0](%1495, %1496) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1498 : Tensor = onnx::Shape(%1392)
  %1499 : Tensor = onnx::Constant[value={2}]()
  %1500 : Long() = onnx::Gather[axis=0](%1498, %1499) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1501 : Tensor = onnx::Shape(%1392)
  %1502 : Tensor = onnx::Constant[value={3}]()
  %1503 : Long() = onnx::Gather[axis=0](%1501, %1502) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1504 : Tensor = onnx::Shape(%1459)
  %1505 : Tensor = onnx::Constant[value={2}]()
  %1506 : Long() = onnx::Gather[axis=0](%1504, %1505) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1507 : Tensor = onnx::Shape(%1459)
  %1508 : Tensor = onnx::Constant[value={3}]()
  %1509 : Long() = onnx::Gather[axis=0](%1507, %1508) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:153:0
  %1513 : Tensor = onnx::Cast[to=1](%1485)
  %1515 : Float(80) = onnx::Range(%2876, %1513, %2877) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:126:0
  %1516 : Float() = onnx::Constant[value={4}]()
  %1517 : Float(80) = onnx::Mul(%1515, %1516)
  %1521 : Tensor = onnx::Cast[to=1](%1482)
  %1523 : Float(40) = onnx::Range(%2878, %1521, %2879) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:129:0
  %1524 : Float() = onnx::Constant[value={4}]()
  %1525 : Float(40) = onnx::Mul(%1523, %1524)
  %1526 : Tensor = onnx::Constant[value={-1}]()
  %1527 : Tensor = onnx::Reshape(%1525, %1526)
  %1528 : Tensor = onnx::Constant[value={-1}]()
  %1529 : Tensor = onnx::Reshape(%1517, %1528)
  %1530 : Tensor = onnx::Shape(%1527)
  %1531 : Tensor = onnx::Shape(%1529)
  %1532 : Tensor = onnx::Concat[axis=0](%1530, %1531)
  %1533 : Tensor = onnx::Constant[value={1}]()
  %1534 : Tensor = onnx::Concat[axis=0](%1530, %1533)
  %1535 : Tensor = onnx::Reshape(%1527, %1534)
  %1536 : Tensor = onnx::Expand(%1535, %1532)
  %1537 : Tensor = onnx::Constant[value={1}]()
  %1538 : Tensor = onnx::Concat[axis=0](%1537, %1531)
  %1539 : Tensor = onnx::Reshape(%1529, %1538)
  %1540 : Tensor = onnx::Expand(%1539, %1532)
  %1541 : Tensor = onnx::Constant[value={-1}]()
  %1542 : Float(3200) = onnx::Reshape(%1540, %1541) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:132:0
  %1543 : Tensor = onnx::Constant[value={-1}]()
  %1544 : Float(3200) = onnx::Reshape(%1536, %1543) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:133:0
  %1545 : Tensor = onnx::Unsqueeze[axes=[1]](%1542)
  %1546 : Tensor = onnx::Unsqueeze[axes=[1]](%1544)
  %1547 : Tensor = onnx::Unsqueeze[axes=[1]](%1542)
  %1548 : Tensor = onnx::Unsqueeze[axes=[1]](%1544)
  %1549 : Float(3200, 4) = onnx::Concat[axis=1](%1545, %1546, %1547, %1548) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:134:0
  %1550 : Tensor = onnx::Constant[value=-1  1  4 [ CPULongType{3} ]]()
  %1551 : Float(3200, 1, 4) = onnx::Reshape(%1549, %1550) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1552 : Float(1, 3, 4) = onnx::Constant[value=<Tensor>]()
  %1553 : Float(3200, 3, 4) = onnx::Add(%1551, %1552) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1554 : Tensor = onnx::Constant[value=-1  4 [ CPULongType{2} ]]()
  %1555 : Float(9600, 4) = onnx::Reshape(%1553, %1554) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1559 : Tensor = onnx::Cast[to=1](%1491)
  %1561 : Float(40) = onnx::Range(%2880, %1559, %2881) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:126:0
  %1562 : Float() = onnx::Constant[value={8}]()
  %1563 : Float(40) = onnx::Mul(%1561, %1562)
  %1567 : Tensor = onnx::Cast[to=1](%1488)
  %1569 : Float(20) = onnx::Range(%2882, %1567, %2883) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:129:0
  %1570 : Float() = onnx::Constant[value={8}]()
  %1571 : Float(20) = onnx::Mul(%1569, %1570)
  %1572 : Tensor = onnx::Constant[value={-1}]()
  %1573 : Tensor = onnx::Reshape(%1571, %1572)
  %1574 : Tensor = onnx::Constant[value={-1}]()
  %1575 : Tensor = onnx::Reshape(%1563, %1574)
  %1576 : Tensor = onnx::Shape(%1573)
  %1577 : Tensor = onnx::Shape(%1575)
  %1578 : Tensor = onnx::Concat[axis=0](%1576, %1577)
  %1579 : Tensor = onnx::Constant[value={1}]()
  %1580 : Tensor = onnx::Concat[axis=0](%1576, %1579)
  %1581 : Tensor = onnx::Reshape(%1573, %1580)
  %1582 : Tensor = onnx::Expand(%1581, %1578)
  %1583 : Tensor = onnx::Constant[value={1}]()
  %1584 : Tensor = onnx::Concat[axis=0](%1583, %1577)
  %1585 : Tensor = onnx::Reshape(%1575, %1584)
  %1586 : Tensor = onnx::Expand(%1585, %1578)
  %1587 : Tensor = onnx::Constant[value={-1}]()
  %1588 : Float(800) = onnx::Reshape(%1586, %1587) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:132:0
  %1589 : Tensor = onnx::Constant[value={-1}]()
  %1590 : Float(800) = onnx::Reshape(%1582, %1589) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:133:0
  %1591 : Tensor = onnx::Unsqueeze[axes=[1]](%1588)
  %1592 : Tensor = onnx::Unsqueeze[axes=[1]](%1590)
  %1593 : Tensor = onnx::Unsqueeze[axes=[1]](%1588)
  %1594 : Tensor = onnx::Unsqueeze[axes=[1]](%1590)
  %1595 : Float(800, 4) = onnx::Concat[axis=1](%1591, %1592, %1593, %1594) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:134:0
  %1596 : Tensor = onnx::Constant[value=-1  1  4 [ CPULongType{3} ]]()
  %1597 : Float(800, 1, 4) = onnx::Reshape(%1595, %1596) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1598 : Float(1, 3, 4) = onnx::Constant[value=<Tensor>]()
  %1599 : Float(800, 3, 4) = onnx::Add(%1597, %1598) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1600 : Tensor = onnx::Constant[value=-1  4 [ CPULongType{2} ]]()
  %1601 : Float(2400, 4) = onnx::Reshape(%1599, %1600) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1605 : Tensor = onnx::Cast[to=1](%1497)
  %1607 : Float(20) = onnx::Range(%2884, %1605, %2885) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:126:0
  %1608 : Float() = onnx::Constant[value={16}]()
  %1609 : Float(20) = onnx::Mul(%1607, %1608)
  %1613 : Tensor = onnx::Cast[to=1](%1494)
  %1615 : Float(10) = onnx::Range(%2886, %1613, %2887) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:129:0
  %1616 : Float() = onnx::Constant[value={16}]()
  %1617 : Float(10) = onnx::Mul(%1615, %1616)
  %1618 : Tensor = onnx::Constant[value={-1}]()
  %1619 : Tensor = onnx::Reshape(%1617, %1618)
  %1620 : Tensor = onnx::Constant[value={-1}]()
  %1621 : Tensor = onnx::Reshape(%1609, %1620)
  %1622 : Tensor = onnx::Shape(%1619)
  %1623 : Tensor = onnx::Shape(%1621)
  %1624 : Tensor = onnx::Concat[axis=0](%1622, %1623)
  %1625 : Tensor = onnx::Constant[value={1}]()
  %1626 : Tensor = onnx::Concat[axis=0](%1622, %1625)
  %1627 : Tensor = onnx::Reshape(%1619, %1626)
  %1628 : Tensor = onnx::Expand(%1627, %1624)
  %1629 : Tensor = onnx::Constant[value={1}]()
  %1630 : Tensor = onnx::Concat[axis=0](%1629, %1623)
  %1631 : Tensor = onnx::Reshape(%1621, %1630)
  %1632 : Tensor = onnx::Expand(%1631, %1624)
  %1633 : Tensor = onnx::Constant[value={-1}]()
  %1634 : Float(200) = onnx::Reshape(%1632, %1633) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:132:0
  %1635 : Tensor = onnx::Constant[value={-1}]()
  %1636 : Float(200) = onnx::Reshape(%1628, %1635) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:133:0
  %1637 : Tensor = onnx::Unsqueeze[axes=[1]](%1634)
  %1638 : Tensor = onnx::Unsqueeze[axes=[1]](%1636)
  %1639 : Tensor = onnx::Unsqueeze[axes=[1]](%1634)
  %1640 : Tensor = onnx::Unsqueeze[axes=[1]](%1636)
  %1641 : Float(200, 4) = onnx::Concat[axis=1](%1637, %1638, %1639, %1640) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:134:0
  %1642 : Tensor = onnx::Constant[value=-1  1  4 [ CPULongType{3} ]]()
  %1643 : Float(200, 1, 4) = onnx::Reshape(%1641, %1642) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1644 : Float(1, 3, 4) = onnx::Constant[value=<Tensor>]()
  %1645 : Float(200, 3, 4) = onnx::Add(%1643, %1644) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1646 : Tensor = onnx::Constant[value=-1  4 [ CPULongType{2} ]]()
  %1647 : Float(600, 4) = onnx::Reshape(%1645, %1646) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1651 : Tensor = onnx::Cast[to=1](%1503)
  %1653 : Float(10) = onnx::Range(%2888, %1651, %2889) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:126:0
  %1654 : Float() = onnx::Constant[value={32}]()
  %1655 : Float(10) = onnx::Mul(%1653, %1654)
  %1659 : Tensor = onnx::Cast[to=1](%1500)
  %1661 : Float(5) = onnx::Range(%2890, %1659, %2891) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:129:0
  %1662 : Float() = onnx::Constant[value={32}]()
  %1663 : Float(5) = onnx::Mul(%1661, %1662)
  %1664 : Tensor = onnx::Constant[value={-1}]()
  %1665 : Tensor = onnx::Reshape(%1663, %1664)
  %1666 : Tensor = onnx::Constant[value={-1}]()
  %1667 : Tensor = onnx::Reshape(%1655, %1666)
  %1668 : Tensor = onnx::Shape(%1665)
  %1669 : Tensor = onnx::Shape(%1667)
  %1670 : Tensor = onnx::Concat[axis=0](%1668, %1669)
  %1671 : Tensor = onnx::Constant[value={1}]()
  %1672 : Tensor = onnx::Concat[axis=0](%1668, %1671)
  %1673 : Tensor = onnx::Reshape(%1665, %1672)
  %1674 : Tensor = onnx::Expand(%1673, %1670)
  %1675 : Tensor = onnx::Constant[value={1}]()
  %1676 : Tensor = onnx::Concat[axis=0](%1675, %1669)
  %1677 : Tensor = onnx::Reshape(%1667, %1676)
  %1678 : Tensor = onnx::Expand(%1677, %1670)
  %1679 : Tensor = onnx::Constant[value={-1}]()
  %1680 : Float(50) = onnx::Reshape(%1678, %1679) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:132:0
  %1681 : Tensor = onnx::Constant[value={-1}]()
  %1682 : Float(50) = onnx::Reshape(%1674, %1681) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:133:0
  %1683 : Tensor = onnx::Unsqueeze[axes=[1]](%1680)
  %1684 : Tensor = onnx::Unsqueeze[axes=[1]](%1682)
  %1685 : Tensor = onnx::Unsqueeze[axes=[1]](%1680)
  %1686 : Tensor = onnx::Unsqueeze[axes=[1]](%1682)
  %1687 : Float(50, 4) = onnx::Concat[axis=1](%1683, %1684, %1685, %1686) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:134:0
  %1688 : Tensor = onnx::Constant[value=-1  1  4 [ CPULongType{3} ]]()
  %1689 : Float(50, 1, 4) = onnx::Reshape(%1687, %1688) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1690 : Float(1, 3, 4) = onnx::Constant[value=<Tensor>]()
  %1691 : Float(50, 3, 4) = onnx::Add(%1689, %1690) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1692 : Tensor = onnx::Constant[value=-1  4 [ CPULongType{2} ]]()
  %1693 : Float(150, 4) = onnx::Reshape(%1691, %1692) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1697 : Tensor = onnx::Cast[to=1](%1509)
  %1699 : Float(5) = onnx::Range(%2892, %1697, %2893) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:126:0
  %1700 : Float() = onnx::Constant[value={64}]()
  %1701 : Float(5) = onnx::Mul(%1699, %1700)
  %1705 : Tensor = onnx::Cast[to=1](%1506)
  %1707 : Float(3) = onnx::Range(%2894, %1705, %2895) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:129:0
  %1708 : Float() = onnx::Constant[value={53}]()
  %1709 : Float(3) = onnx::Mul(%1707, %1708)
  %1710 : Tensor = onnx::Constant[value={-1}]()
  %1711 : Tensor = onnx::Reshape(%1709, %1710)
  %1712 : Tensor = onnx::Constant[value={-1}]()
  %1713 : Tensor = onnx::Reshape(%1701, %1712)
  %1714 : Tensor = onnx::Shape(%1711)
  %1715 : Tensor = onnx::Shape(%1713)
  %1716 : Tensor = onnx::Concat[axis=0](%1714, %1715)
  %1717 : Tensor = onnx::Constant[value={1}]()
  %1718 : Tensor = onnx::Concat[axis=0](%1714, %1717)
  %1719 : Tensor = onnx::Reshape(%1711, %1718)
  %1720 : Tensor = onnx::Expand(%1719, %1716)
  %1721 : Tensor = onnx::Constant[value={1}]()
  %1722 : Tensor = onnx::Concat[axis=0](%1721, %1715)
  %1723 : Tensor = onnx::Reshape(%1713, %1722)
  %1724 : Tensor = onnx::Expand(%1723, %1716)
  %1725 : Tensor = onnx::Constant[value={-1}]()
  %1726 : Float(15) = onnx::Reshape(%1724, %1725) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:132:0
  %1727 : Tensor = onnx::Constant[value={-1}]()
  %1728 : Float(15) = onnx::Reshape(%1720, %1727) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:133:0
  %1729 : Tensor = onnx::Unsqueeze[axes=[1]](%1726)
  %1730 : Tensor = onnx::Unsqueeze[axes=[1]](%1728)
  %1731 : Tensor = onnx::Unsqueeze[axes=[1]](%1726)
  %1732 : Tensor = onnx::Unsqueeze[axes=[1]](%1728)
  %1733 : Float(15, 4) = onnx::Concat[axis=1](%1729, %1730, %1731, %1732) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:134:0
  %1734 : Tensor = onnx::Constant[value=-1  1  4 [ CPULongType{3} ]]()
  %1735 : Float(15, 1, 4) = onnx::Reshape(%1733, %1734) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1736 : Float(1, 3, 4) = onnx::Constant[value=<Tensor>]()
  %1737 : Float(15, 3, 4) = onnx::Add(%1735, %1736) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1738 : Tensor = onnx::Constant[value=-1  4 [ CPULongType{2} ]]()
  %1739 : Float(45, 4) = onnx::Reshape(%1737, %1738) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:137:0
  %1740 : Float(12795, 4) = onnx::Concat[axis=0](%1555, %1601, %1647, %1693, %1739) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:165:0
  %1741 : Tensor = onnx::Shape(%1462)
  %1742 : Tensor = onnx::Constant[value={0}]()
  %1743 : Long() = onnx::Gather[axis=0](%1741, %1742) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1744 : Tensor = onnx::Shape(%1462)
  %1745 : Tensor = onnx::Constant[value={1}]()
  %1746 : Long() = onnx::Gather[axis=0](%1744, %1745) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1747 : Tensor = onnx::Shape(%1462)
  %1748 : Tensor = onnx::Constant[value={2}]()
  %1749 : Long() = onnx::Gather[axis=0](%1747, %1748) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1750 : Tensor = onnx::Shape(%1462)
  %1751 : Tensor = onnx::Constant[value={3}]()
  %1752 : Long() = onnx::Gather[axis=0](%1750, %1751) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1753 : Tensor = onnx::Shape(%1463)
  %1754 : Tensor = onnx::Constant[value={1}]()
  %1755 : Long() = onnx::Gather[axis=0](%1753, %1754) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:225:0
  %1756 : Long() = onnx::Constant[value={4}]()
  %1757 : LongTensor = onnx::Div(%1755, %1756)
  %1758 : Tensor = onnx::Cast[to=7](%1757)
  %1759 : Long() = onnx::Cast[to=7](%1758) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1760 : LongTensor = onnx::Div(%1746, %1759)
  %1761 : Tensor = onnx::Cast[to=7](%1760)
  %1762 : Long() = onnx::Cast[to=7](%1761) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1764 : Tensor = onnx::Unsqueeze[axes=[0]](%1743)
  %1766 : Tensor = onnx::Unsqueeze[axes=[0]](%1762)
  %1767 : Tensor = onnx::Unsqueeze[axes=[0]](%1749)
  %1768 : Tensor = onnx::Unsqueeze[axes=[0]](%1752)
  %1769 : Tensor = onnx::Concat[axis=0](%1764, %2896, %1766, %1767, %1768)
  %1770 : Float(1, 3, 1, 40, 80) = onnx::Reshape(%1462, %1769) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1771 : Float(1, 40, 80, 3, 1) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1770) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1773 : Tensor = onnx::Unsqueeze[axes=[0]](%1743)
  %1775 : Tensor = onnx::Unsqueeze[axes=[0]](%1762)
  %1776 : Tensor = onnx::Concat[axis=0](%1773, %2897, %1775)
  %1777 : Float(1, 9600, 1) = onnx::Reshape(%1771, %1776) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1780 : Tensor = onnx::Unsqueeze[axes=[0]](%1743)
  %1783 : Tensor = onnx::Unsqueeze[axes=[0]](%1749)
  %1784 : Tensor = onnx::Unsqueeze[axes=[0]](%1752)
  %1785 : Tensor = onnx::Concat[axis=0](%1780, %2898, %2899, %1783, %1784)
  %1786 : Float(1, 3, 4, 40, 80) = onnx::Reshape(%1463, %1785) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1787 : Float(1, 40, 80, 3, 4) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1786) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1790 : Tensor = onnx::Unsqueeze[axes=[0]](%1743)
  %1793 : Tensor = onnx::Concat[axis=0](%1790, %2900, %2901)
  %1794 : Float(1, 9600, 4) = onnx::Reshape(%1787, %1793) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1795 : Tensor = onnx::Shape(%1466)
  %1796 : Tensor = onnx::Constant[value={0}]()
  %1797 : Long() = onnx::Gather[axis=0](%1795, %1796) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1798 : Tensor = onnx::Shape(%1466)
  %1799 : Tensor = onnx::Constant[value={1}]()
  %1800 : Long() = onnx::Gather[axis=0](%1798, %1799) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1801 : Tensor = onnx::Shape(%1466)
  %1802 : Tensor = onnx::Constant[value={2}]()
  %1803 : Long() = onnx::Gather[axis=0](%1801, %1802) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1804 : Tensor = onnx::Shape(%1466)
  %1805 : Tensor = onnx::Constant[value={3}]()
  %1806 : Long() = onnx::Gather[axis=0](%1804, %1805) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1807 : Tensor = onnx::Shape(%1467)
  %1808 : Tensor = onnx::Constant[value={1}]()
  %1809 : Long() = onnx::Gather[axis=0](%1807, %1808) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:225:0
  %1810 : Long() = onnx::Constant[value={4}]()
  %1811 : LongTensor = onnx::Div(%1809, %1810)
  %1812 : Tensor = onnx::Cast[to=7](%1811)
  %1813 : Long() = onnx::Cast[to=7](%1812) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1814 : LongTensor = onnx::Div(%1800, %1813)
  %1815 : Tensor = onnx::Cast[to=7](%1814)
  %1816 : Long() = onnx::Cast[to=7](%1815) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1818 : Tensor = onnx::Unsqueeze[axes=[0]](%1797)
  %1820 : Tensor = onnx::Unsqueeze[axes=[0]](%1816)
  %1821 : Tensor = onnx::Unsqueeze[axes=[0]](%1803)
  %1822 : Tensor = onnx::Unsqueeze[axes=[0]](%1806)
  %1823 : Tensor = onnx::Concat[axis=0](%1818, %2902, %1820, %1821, %1822)
  %1824 : Float(1, 3, 1, 20, 40) = onnx::Reshape(%1466, %1823) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1825 : Float(1, 20, 40, 3, 1) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1824) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1827 : Tensor = onnx::Unsqueeze[axes=[0]](%1797)
  %1829 : Tensor = onnx::Unsqueeze[axes=[0]](%1816)
  %1830 : Tensor = onnx::Concat[axis=0](%1827, %2903, %1829)
  %1831 : Float(1, 2400, 1) = onnx::Reshape(%1825, %1830) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1834 : Tensor = onnx::Unsqueeze[axes=[0]](%1797)
  %1837 : Tensor = onnx::Unsqueeze[axes=[0]](%1803)
  %1838 : Tensor = onnx::Unsqueeze[axes=[0]](%1806)
  %1839 : Tensor = onnx::Concat[axis=0](%1834, %2904, %2905, %1837, %1838)
  %1840 : Float(1, 3, 4, 20, 40) = onnx::Reshape(%1467, %1839) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1841 : Float(1, 20, 40, 3, 4) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1840) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1844 : Tensor = onnx::Unsqueeze[axes=[0]](%1797)
  %1847 : Tensor = onnx::Concat[axis=0](%1844, %2906, %2907)
  %1848 : Float(1, 2400, 4) = onnx::Reshape(%1841, %1847) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1849 : Tensor = onnx::Shape(%1470)
  %1850 : Tensor = onnx::Constant[value={0}]()
  %1851 : Long() = onnx::Gather[axis=0](%1849, %1850) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1852 : Tensor = onnx::Shape(%1470)
  %1853 : Tensor = onnx::Constant[value={1}]()
  %1854 : Long() = onnx::Gather[axis=0](%1852, %1853) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1855 : Tensor = onnx::Shape(%1470)
  %1856 : Tensor = onnx::Constant[value={2}]()
  %1857 : Long() = onnx::Gather[axis=0](%1855, %1856) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1858 : Tensor = onnx::Shape(%1470)
  %1859 : Tensor = onnx::Constant[value={3}]()
  %1860 : Long() = onnx::Gather[axis=0](%1858, %1859) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1861 : Tensor = onnx::Shape(%1471)
  %1862 : Tensor = onnx::Constant[value={1}]()
  %1863 : Long() = onnx::Gather[axis=0](%1861, %1862) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:225:0
  %1864 : Long() = onnx::Constant[value={4}]()
  %1865 : LongTensor = onnx::Div(%1863, %1864)
  %1866 : Tensor = onnx::Cast[to=7](%1865)
  %1867 : Long() = onnx::Cast[to=7](%1866) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1868 : LongTensor = onnx::Div(%1854, %1867)
  %1869 : Tensor = onnx::Cast[to=7](%1868)
  %1870 : Long() = onnx::Cast[to=7](%1869) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1872 : Tensor = onnx::Unsqueeze[axes=[0]](%1851)
  %1874 : Tensor = onnx::Unsqueeze[axes=[0]](%1870)
  %1875 : Tensor = onnx::Unsqueeze[axes=[0]](%1857)
  %1876 : Tensor = onnx::Unsqueeze[axes=[0]](%1860)
  %1877 : Tensor = onnx::Concat[axis=0](%1872, %2908, %1874, %1875, %1876)
  %1878 : Float(1, 3, 1, 10, 20) = onnx::Reshape(%1470, %1877) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1879 : Float(1, 10, 20, 3, 1) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1878) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1881 : Tensor = onnx::Unsqueeze[axes=[0]](%1851)
  %1883 : Tensor = onnx::Unsqueeze[axes=[0]](%1870)
  %1884 : Tensor = onnx::Concat[axis=0](%1881, %2909, %1883)
  %1885 : Float(1, 600, 1) = onnx::Reshape(%1879, %1884) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1888 : Tensor = onnx::Unsqueeze[axes=[0]](%1851)
  %1891 : Tensor = onnx::Unsqueeze[axes=[0]](%1857)
  %1892 : Tensor = onnx::Unsqueeze[axes=[0]](%1860)
  %1893 : Tensor = onnx::Concat[axis=0](%1888, %2910, %2911, %1891, %1892)
  %1894 : Float(1, 3, 4, 10, 20) = onnx::Reshape(%1471, %1893) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1895 : Float(1, 10, 20, 3, 4) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1894) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1898 : Tensor = onnx::Unsqueeze[axes=[0]](%1851)
  %1901 : Tensor = onnx::Concat[axis=0](%1898, %2912, %2913)
  %1902 : Float(1, 600, 4) = onnx::Reshape(%1895, %1901) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1903 : Tensor = onnx::Shape(%1474)
  %1904 : Tensor = onnx::Constant[value={0}]()
  %1905 : Long() = onnx::Gather[axis=0](%1903, %1904) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1906 : Tensor = onnx::Shape(%1474)
  %1907 : Tensor = onnx::Constant[value={1}]()
  %1908 : Long() = onnx::Gather[axis=0](%1906, %1907) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1909 : Tensor = onnx::Shape(%1474)
  %1910 : Tensor = onnx::Constant[value={2}]()
  %1911 : Long() = onnx::Gather[axis=0](%1909, %1910) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1912 : Tensor = onnx::Shape(%1474)
  %1913 : Tensor = onnx::Constant[value={3}]()
  %1914 : Long() = onnx::Gather[axis=0](%1912, %1913) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1915 : Tensor = onnx::Shape(%1475)
  %1916 : Tensor = onnx::Constant[value={1}]()
  %1917 : Long() = onnx::Gather[axis=0](%1915, %1916) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:225:0
  %1918 : Long() = onnx::Constant[value={4}]()
  %1919 : LongTensor = onnx::Div(%1917, %1918)
  %1920 : Tensor = onnx::Cast[to=7](%1919)
  %1921 : Long() = onnx::Cast[to=7](%1920) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1922 : LongTensor = onnx::Div(%1908, %1921)
  %1923 : Tensor = onnx::Cast[to=7](%1922)
  %1924 : Long() = onnx::Cast[to=7](%1923) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1926 : Tensor = onnx::Unsqueeze[axes=[0]](%1905)
  %1928 : Tensor = onnx::Unsqueeze[axes=[0]](%1924)
  %1929 : Tensor = onnx::Unsqueeze[axes=[0]](%1911)
  %1930 : Tensor = onnx::Unsqueeze[axes=[0]](%1914)
  %1931 : Tensor = onnx::Concat[axis=0](%1926, %2914, %1928, %1929, %1930)
  %1932 : Float(1, 3, 1, 5, 10) = onnx::Reshape(%1474, %1931) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1933 : Float(1, 5, 10, 3, 1) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1932) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1935 : Tensor = onnx::Unsqueeze[axes=[0]](%1905)
  %1937 : Tensor = onnx::Unsqueeze[axes=[0]](%1924)
  %1938 : Tensor = onnx::Concat[axis=0](%1935, %2915, %1937)
  %1939 : Float(1, 150, 1) = onnx::Reshape(%1933, %1938) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1942 : Tensor = onnx::Unsqueeze[axes=[0]](%1905)
  %1945 : Tensor = onnx::Unsqueeze[axes=[0]](%1911)
  %1946 : Tensor = onnx::Unsqueeze[axes=[0]](%1914)
  %1947 : Tensor = onnx::Concat[axis=0](%1942, %2916, %2917, %1945, %1946)
  %1948 : Float(1, 3, 4, 5, 10) = onnx::Reshape(%1475, %1947) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1949 : Float(1, 5, 10, 3, 4) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1948) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1952 : Tensor = onnx::Unsqueeze[axes=[0]](%1905)
  %1955 : Tensor = onnx::Concat[axis=0](%1952, %2918, %2919)
  %1956 : Float(1, 150, 4) = onnx::Reshape(%1949, %1955) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1957 : Tensor = onnx::Shape(%1478)
  %1958 : Tensor = onnx::Constant[value={0}]()
  %1959 : Long() = onnx::Gather[axis=0](%1957, %1958) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1960 : Tensor = onnx::Shape(%1478)
  %1961 : Tensor = onnx::Constant[value={1}]()
  %1962 : Long() = onnx::Gather[axis=0](%1960, %1961) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1963 : Tensor = onnx::Shape(%1478)
  %1964 : Tensor = onnx::Constant[value={2}]()
  %1965 : Long() = onnx::Gather[axis=0](%1963, %1964) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1966 : Tensor = onnx::Shape(%1478)
  %1967 : Tensor = onnx::Constant[value={3}]()
  %1968 : Long() = onnx::Gather[axis=0](%1966, %1967) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:224:0
  %1969 : Tensor = onnx::Shape(%1479)
  %1970 : Tensor = onnx::Constant[value={1}]()
  %1971 : Long() = onnx::Gather[axis=0](%1969, %1970) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:225:0
  %1972 : Long() = onnx::Constant[value={4}]()
  %1973 : LongTensor = onnx::Div(%1971, %1972)
  %1974 : Tensor = onnx::Cast[to=7](%1973)
  %1975 : Long() = onnx::Cast[to=7](%1974) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1976 : LongTensor = onnx::Div(%1962, %1975)
  %1977 : Tensor = onnx::Cast[to=7](%1976)
  %1978 : Long() = onnx::Cast[to=7](%1977) # /home/lahaidar/lara_pytorch/torch/tensor.py:424:0
  %1980 : Tensor = onnx::Unsqueeze[axes=[0]](%1959)
  %1982 : Tensor = onnx::Unsqueeze[axes=[0]](%1978)
  %1983 : Tensor = onnx::Unsqueeze[axes=[0]](%1965)
  %1984 : Tensor = onnx::Unsqueeze[axes=[0]](%1968)
  %1985 : Tensor = onnx::Concat[axis=0](%1980, %2920, %1982, %1983, %1984)
  %1986 : Float(1, 3, 1, 3, 5) = onnx::Reshape(%1478, %1985) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %1987 : Float(1, 3, 5, 3, 1) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%1986) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %1989 : Tensor = onnx::Unsqueeze[axes=[0]](%1959)
  %1991 : Tensor = onnx::Unsqueeze[axes=[0]](%1978)
  %1992 : Tensor = onnx::Concat[axis=0](%1989, %2921, %1991)
  %1993 : Float(1, 45, 1) = onnx::Reshape(%1987, %1992) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %1996 : Tensor = onnx::Unsqueeze[axes=[0]](%1959)
  %1999 : Tensor = onnx::Unsqueeze[axes=[0]](%1965)
  %2000 : Tensor = onnx::Unsqueeze[axes=[0]](%1968)
  %2001 : Tensor = onnx::Concat[axis=0](%1996, %2922, %2923, %1999, %2000)
  %2002 : Float(1, 3, 4, 3, 5) = onnx::Reshape(%1479, %2001) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:207:0
  %2003 : Float(1, 3, 5, 3, 4) = onnx::Transpose[perm=[0, 3, 4, 1, 2]](%2002) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:208:0
  %2006 : Tensor = onnx::Unsqueeze[axes=[0]](%1959)
  %2009 : Tensor = onnx::Concat[axis=0](%2006, %2924, %2925)
  %2010 : Float(1, 45, 4) = onnx::Reshape(%2003, %2009) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:209:0
  %2011 : Float(1, 12795, 1) = onnx::Concat[axis=1](%1777, %1831, %1885, %1939, %1993) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:240:0
  %2012 : Float(12795, 1) = onnx::Flatten[axis=-1](%2011) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:368:0
  %2013 : Float(1, 12795, 4) = onnx::Concat[axis=1](%1794, %1848, %1902, %1956, %2010) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:241:0
  %2014 : Tensor = onnx::Constant[value=-1  4 [ CPULongType{2} ]]()
  %2015 : Float(12795, 4) = onnx::Reshape(%2013, %2014) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:470:0
  %2016 : Tensor = onnx::Shape(%1740)
  %2017 : Tensor = onnx::Constant[value={0}]()
  %2018 : Long() = onnx::Gather[axis=0](%2016, %2017) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:181:0
  %2019 : Float(12795, 4) = onnx::Concat[axis=0](%1740) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:182:0
  %2021 : Tensor = onnx::Unsqueeze[axes=[0]](%2018)
  %2023 : Tensor = onnx::Concat[axis=0](%2021, %2926)
  %2024 : Float(12795, 4) = onnx::Reshape(%2015, %2023) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:212:0
  %2025 : Float(12795, 4) = onnx::Cast[to=1](%2019) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:206:0
  %2026 : Tensor = onnx::Constant[value={2}]()
  %2027 : Float(12795) = onnx::Gather[axis=1](%2025, %2026) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:203:0
  %2028 : Tensor = onnx::Constant[value={0}]()
  %2029 : Float(12795) = onnx::Gather[axis=1](%2025, %2028) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:203:0
  %2030 : Float(12795) = onnx::Sub(%2027, %2029) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:220:0
  %2031 : Tensor = onnx::Constant[value={3}]()
  %2032 : Float(12795) = onnx::Gather[axis=1](%2025, %2031) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:204:0
  %2033 : Tensor = onnx::Constant[value={1}]()
  %2034 : Float(12795) = onnx::Gather[axis=1](%2025, %2033) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:204:0
  %2035 : Float(12795) = onnx::Sub(%2032, %2034) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:221:0
  %2036 : Tensor = onnx::Constant[value={0}]()
  %2037 : Float(12795) = onnx::Gather[axis=1](%2025, %2036) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:205:0
  %2038 : Float() = onnx::Constant[value={0.5}]()
  %2039 : Float(12795) = onnx::Mul(%2030, %2038)
  %2040 : Float(12795) = onnx::Add(%2037, %2039) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:218:0
  %2041 : Tensor = onnx::Constant[value={1}]()
  %2042 : Float(12795) = onnx::Gather[axis=1](%2025, %2041) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:206:0
  %2043 : Float() = onnx::Constant[value={0.5}]()
  %2044 : Float(12795) = onnx::Mul(%2035, %2043)
  %2045 : Float(12795) = onnx::Add(%2042, %2044) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:219:0
  %2046 : Tensor = onnx::Constant[value={1}]()
  %2047 : Tensor = onnx::Constant[value={0}]()
  %2048 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2049 : Tensor = onnx::Constant[value={4}]()
  %2050 : Float(12795, 1) = onnx::Slice(%2024, %2047, %2048, %2046, %2049) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:209:0
  %2051 : Tensor = onnx::Constant[value={1}]()
  %2052 : Tensor = onnx::Constant[value={1}]()
  %2053 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2054 : Tensor = onnx::Constant[value={4}]()
  %2055 : Float(12795, 1) = onnx::Slice(%2024, %2052, %2053, %2051, %2054) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:210:0
  %2056 : Tensor = onnx::Constant[value={1}]()
  %2057 : Tensor = onnx::Constant[value={2}]()
  %2058 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2059 : Tensor = onnx::Constant[value={4}]()
  %2060 : Float(12795, 1) = onnx::Slice(%2024, %2057, %2058, %2056, %2059) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:211:0
  %2061 : Tensor = onnx::Constant[value={1}]()
  %2062 : Tensor = onnx::Constant[value={3}]()
  %2063 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2064 : Tensor = onnx::Constant[value={4}]()
  %2065 : Float(12795, 1) = onnx::Slice(%2024, %2062, %2063, %2061, %2064) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:212:0
  %2066 : None = prim::Constant()
  %2069 : Float(12795, 1) = onnx::Clip(%2060, %2066, %2927) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:215:0
  %2070 : None = prim::Constant()
  %2073 : Float(12795, 1) = onnx::Clip(%2065, %2070, %2928) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:216:0
  %2074 : Float(12795, 1) = onnx::Unsqueeze[axes=[1]](%2030) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:218:0
  %2075 : Float(12795, 1) = onnx::Mul(%2050, %2074) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:218:0
  %2076 : Float(12795, 1) = onnx::Unsqueeze[axes=[1]](%2040) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:218:0
  %2077 : Float(12795, 1) = onnx::Add(%2075, %2076) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:218:0
  %2078 : Float(12795, 1) = onnx::Unsqueeze[axes=[1]](%2035) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:219:0
  %2079 : Float(12795, 1) = onnx::Mul(%2055, %2078) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:219:0
  %2080 : Float(12795, 1) = onnx::Unsqueeze[axes=[1]](%2045) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:219:0
  %2081 : Float(12795, 1) = onnx::Add(%2079, %2080) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:219:0
  %2082 : Float(12795, 1) = onnx::Exp(%2069) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:220:0
  %2083 : Float(12795, 1) = onnx::Unsqueeze[axes=[1]](%2030) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:220:0
  %2084 : Float(12795, 1) = onnx::Mul(%2082, %2083) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:220:0
  %2085 : Float(12795, 1) = onnx::Exp(%2073) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:221:0
  %2086 : Float(12795, 1) = onnx::Unsqueeze[axes=[1]](%2035) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:221:0
  %2087 : Float(12795, 1) = onnx::Mul(%2085, %2086) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:221:0
  %2088 : Float() = onnx::Constant[value={0.5}]()
  %2089 : Float(12795, 1) = onnx::Mul(%2088, %2084) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:223:0
  %2090 : Float(12795, 1) = onnx::Sub(%2077, %2089) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:223:0
  %2091 : Float() = onnx::Constant[value={0.5}]()
  %2092 : Float(12795, 1) = onnx::Mul(%2091, %2087) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:224:0
  %2093 : Float(12795, 1) = onnx::Sub(%2081, %2092) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:224:0
  %2094 : Float() = onnx::Constant[value={0.5}]()
  %2095 : Float(12795, 1) = onnx::Mul(%2094, %2084) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:225:0
  %2096 : Float(12795, 1) = onnx::Add(%2077, %2095) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:225:0
  %2097 : Float() = onnx::Constant[value={0.5}]()
  %2098 : Float(12795, 1) = onnx::Mul(%2097, %2087) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:226:0
  %2099 : Float(12795, 1) = onnx::Add(%2081, %2098) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:226:0
  %2100 : Tensor = onnx::Unsqueeze[axes=[2]](%2090)
  %2101 : Tensor = onnx::Unsqueeze[axes=[2]](%2093)
  %2102 : Tensor = onnx::Unsqueeze[axes=[2]](%2096)
  %2103 : Tensor = onnx::Unsqueeze[axes=[2]](%2099)
  %2104 : Float(12795, 1, 4) = onnx::Concat[axis=2](%2100, %2101, %2102, %2103) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:227:0
  %2105 : Float(12795, 4) = onnx::Flatten[axis=1](%2104) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:227:0
  %2108 : Tensor = onnx::Unsqueeze[axes=[0]](%2018)
  %2111 : Tensor = onnx::Concat[axis=0](%2108, %2929, %2930)
  %2112 : Float(12795, 1, 4) = onnx::Reshape(%2105, %2111) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/_utils.py:189:0
  %2113 : Tensor = onnx::Constant[value= 1 -1  4 [ CPULongType{3} ]]()
  %2114 : Float(1, 12795, 4) = onnx::Reshape(%2112, %2113) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:471:0
  %2115 : Tensor = onnx::Shape(%2114)
  %2116 : Tensor = onnx::Constant[value={0}]()
  %2117 : Long() = onnx::Gather[axis=0](%2115, %2116) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:365:0
  %2119 : Tensor = onnx::Unsqueeze[axes=[0]](%2117)
  %2121 : Tensor = onnx::Concat[axis=0](%2119, %2931)
  %2122 : Float(1, 12795) = onnx::Reshape(%2012, %2121) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:369:0
  %2123 : int[] = onnx::Constant[value={9600}]()
  %2124 : Long(9600) = onnx::ConstantOfShape[value={0}](%2123) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:373:0
  %2125 : int[] = onnx::Constant[value={2400}]()
  %2126 : Long(2400) = onnx::ConstantOfShape[value={1}](%2125) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:373:0
  %2127 : int[] = onnx::Constant[value={600}]()
  %2128 : Long(600) = onnx::ConstantOfShape[value={2}](%2127) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:373:0
  %2129 : int[] = onnx::Constant[value={150}]()
  %2130 : Long(150) = onnx::ConstantOfShape[value={3}](%2129) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:373:0
  %2131 : int[] = onnx::Constant[value={45}]()
  %2132 : Long(45) = onnx::ConstantOfShape[value={4}](%2131) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:373:0
  %2133 : Long(12795) = onnx::Concat[axis=0](%2124, %2126, %2128, %2130, %2132) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:375:0
  %2134 : Tensor = onnx::Constant[value= 1 -1 [ CPULongType{2} ]]()
  %2135 : Long(1, 12795) = onnx::Reshape(%2133, %2134) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:376:0
  %2136 : Tensor = onnx::Shape(%2122)
  %2137 : Long(1, 12795) = onnx::Expand(%2135, %2136) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:376:0
  %ob.1 : Float(1, 9600), %ob.2 : Float(1, 2400), %ob.3 : Float(1, 600), %ob.4 : Float(1, 150), %ob : Float(1, 45) = onnx::Split[axis=1, split=[9600, 2400, 600, 150, 45]](%2122)
  %2143 : Long(2) = onnx::Shape(%ob.1) # /home/lahaidar/lara_pytorch/torch/onnx/operators.py:16:0
  %2144 : Tensor = onnx::Constant[value={1}]()
  %2145 : Long() = onnx::Gather[axis=0](%2143, %2144) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2146 : Long(1) = onnx::Unsqueeze[axes=[0]](%2145) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2147 : Long(1) = onnx::Constant[value={1000}]() # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:25:0
  %2148 : Long(2) = onnx::Concat[axis=0](%2147, %2146) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2149 : Int(2) = onnx::Cast[to=6](%2148) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2150 : Int() = onnx::ReduceMin[keepdims=0](%2149) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2151 : Long() = onnx::Cast[to=7](%2150) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2152 : Tensor = onnx::Constant[value={1}]()
  %2153 : Tensor = onnx::Reshape(%2151, %2152)
  %2154 : Float(1, 1000), %2155 : Long(1, 1000) = onnx::TopK[axis=1, largest=1, sorted=1](%ob.1, %2153) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:358:0
  %2156 : Long() = onnx::Constant[value={0}]()
  %2157 : Long(1, 1000) = onnx::Add(%2155, %2156)
  %2158 : Long(2) = onnx::Shape(%ob.2) # /home/lahaidar/lara_pytorch/torch/onnx/operators.py:16:0
  %2159 : Tensor = onnx::Constant[value={1}]()
  %2160 : Long() = onnx::Gather[axis=0](%2158, %2159) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2161 : Long(1) = onnx::Unsqueeze[axes=[0]](%2160) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2162 : Long(1) = onnx::Constant[value={1000}]() # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:25:0
  %2163 : Long(2) = onnx::Concat[axis=0](%2162, %2161) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2164 : Int(2) = onnx::Cast[to=6](%2163) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2165 : Int() = onnx::ReduceMin[keepdims=0](%2164) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2166 : Long() = onnx::Cast[to=7](%2165) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2167 : Tensor = onnx::Constant[value={1}]()
  %2168 : Tensor = onnx::Reshape(%2166, %2167)
  %2169 : Float(1, 1000), %2170 : Long(1, 1000) = onnx::TopK[axis=1, largest=1, sorted=1](%ob.2, %2168) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:358:0
  %2171 : Long(1, 1000) = onnx::Add(%2170, %2146) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:359:0
  %2172 : Long(1) = onnx::Add(%2146, %2161)
  %2173 : Long(2) = onnx::Shape(%ob.3) # /home/lahaidar/lara_pytorch/torch/onnx/operators.py:16:0
  %2174 : Tensor = onnx::Constant[value={1}]()
  %2175 : Long() = onnx::Gather[axis=0](%2173, %2174) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2176 : Long(1) = onnx::Unsqueeze[axes=[0]](%2175) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2177 : Long(1) = onnx::Constant[value={1000}]() # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:25:0
  %2178 : Long(2) = onnx::Concat[axis=0](%2177, %2176) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2179 : Int(2) = onnx::Cast[to=6](%2178) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2180 : Int() = onnx::ReduceMin[keepdims=0](%2179) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2181 : Long() = onnx::Cast[to=7](%2180) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2182 : Tensor = onnx::Constant[value={1}]()
  %2183 : Tensor = onnx::Reshape(%2181, %2182)
  %2184 : Float(1, 600), %2185 : Long(1, 600) = onnx::TopK[axis=1, largest=1, sorted=1](%ob.3, %2183) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:358:0
  %2186 : Long(1, 600) = onnx::Add(%2185, %2172) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:359:0
  %2187 : Long(1) = onnx::Add(%2172, %2176)
  %2188 : Long(2) = onnx::Shape(%ob.4) # /home/lahaidar/lara_pytorch/torch/onnx/operators.py:16:0
  %2189 : Tensor = onnx::Constant[value={1}]()
  %2190 : Long() = onnx::Gather[axis=0](%2188, %2189) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2191 : Long(1) = onnx::Unsqueeze[axes=[0]](%2190) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2192 : Long(1) = onnx::Constant[value={1000}]() # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:25:0
  %2193 : Long(2) = onnx::Concat[axis=0](%2192, %2191) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2194 : Int(2) = onnx::Cast[to=6](%2193) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2195 : Int() = onnx::ReduceMin[keepdims=0](%2194) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2196 : Long() = onnx::Cast[to=7](%2195) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2197 : Tensor = onnx::Constant[value={1}]()
  %2198 : Tensor = onnx::Reshape(%2196, %2197)
  %2199 : Float(1, 150), %2200 : Long(1, 150) = onnx::TopK[axis=1, largest=1, sorted=1](%ob.4, %2198) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:358:0
  %2201 : Long(1, 150) = onnx::Add(%2200, %2187) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:359:0
  %2202 : Long(1) = onnx::Add(%2187, %2191)
  %2203 : Long(2) = onnx::Shape(%ob) # /home/lahaidar/lara_pytorch/torch/onnx/operators.py:16:0
  %2204 : Tensor = onnx::Constant[value={1}]()
  %2205 : Long() = onnx::Gather[axis=0](%2203, %2204) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2206 : Long(1) = onnx::Unsqueeze[axes=[0]](%2205) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:21:0
  %2207 : Long(1) = onnx::Constant[value={1000}]() # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:25:0
  %2208 : Long(2) = onnx::Concat[axis=0](%2207, %2206) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2209 : Int(2) = onnx::Cast[to=6](%2208) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2210 : Int() = onnx::ReduceMin[keepdims=0](%2209) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2211 : Long() = onnx::Cast[to=7](%2210) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:26:0
  %2212 : Tensor = onnx::Constant[value={1}]()
  %2213 : Tensor = onnx::Reshape(%2211, %2212)
  %2214 : Float(1, 45), %2215 : Long(1, 45) = onnx::TopK[axis=1, largest=1, sorted=1](%ob, %2213) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:358:0
  %2216 : Long(1, 45) = onnx::Add(%2215, %2202) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:359:0
  %2217 : Long(1, 2795) = onnx::Concat[axis=1](%2157, %2171, %2186, %2201, %2216) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:361:0
  %2218 : Tensor = onnx::Cast[to=7](%2117)
  %2219 : Tensor = onnx::Constant[value={0}]()
  %2220 : Tensor = onnx::Constant[value={1}]()
  %2221 : Long(1) = onnx::Range(%2219, %2218, %2220) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:382:0
  %2222 : Long(1, 1) = onnx::Unsqueeze[axes=[1]](%2221) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:382:0
  %2223 : Long(1, 1) = onnx::Cast[to=7](%2222) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:384:0
  %2224 : Long(1, 2795) = onnx::Cast[to=7](%2217) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:384:0
  %2225 : Tensor = onnx::Shape(%2122)
  %2226 : Tensor = onnx::Constant[value={1}]()
  %2227 : Tensor = onnx::Gather[axis=0](%2225, %2226)
  %2228 : Tensor = onnx::Flatten[axis=2](%2122)
  %2229 : LongTensor = onnx::Mul(%2223, %2227)
  %2230 : LongTensor = onnx::Add(%2224, %2229)
  %2231 : Tensor = onnx::Gather[axis=0](%2228, %2230)
  %2232 : Tensor = onnx::Shape(%2230)
  %2235 : Tensor = onnx::Reshape(%2231, %2932)
  %2236 : Tensor = onnx::Concat[axis=0](%2232)
  %2237 : Float(1, 2795) = onnx::Reshape(%2235, %2236) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:384:0
  %2238 : Long(1, 1) = onnx::Cast[to=7](%2223) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:385:0
  %2239 : Long(1, 2795) = onnx::Cast[to=7](%2224) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:385:0
  %2240 : Tensor = onnx::Shape(%2137)
  %2241 : Tensor = onnx::Constant[value={1}]()
  %2242 : Tensor = onnx::Gather[axis=0](%2240, %2241)
  %2243 : Tensor = onnx::Flatten[axis=2](%2137)
  %2244 : LongTensor = onnx::Mul(%2238, %2242)
  %2245 : LongTensor = onnx::Add(%2239, %2244)
  %2246 : Tensor = onnx::Gather[axis=0](%2243, %2245)
  %2247 : Tensor = onnx::Shape(%2245)
  %2250 : Tensor = onnx::Reshape(%2246, %2933)
  %2251 : Tensor = onnx::Concat[axis=0](%2247)
  %2252 : Long(1, 2795) = onnx::Reshape(%2250, %2251) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:385:0
  %2253 : Long(1, 1) = onnx::Cast[to=7](%2238) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:386:0
  %2254 : Long(1, 2795) = onnx::Cast[to=7](%2239) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:386:0
  %2255 : Tensor = onnx::Shape(%2114)
  %2256 : Tensor = onnx::Constant[value={1}]()
  %2257 : Tensor = onnx::Gather[axis=0](%2255, %2256)
  %2258 : Tensor = onnx::Constant[value={2}]()
  %2259 : Tensor = onnx::Gather[axis=0](%2255, %2258)
  %2260 : Tensor = onnx::Flatten[axis=2](%2114)
  %2261 : LongTensor = onnx::Mul(%2253, %2257)
  %2262 : LongTensor = onnx::Add(%2254, %2261)
  %2263 : Tensor = onnx::Gather[axis=0](%2260, %2262)
  %2264 : Tensor = onnx::Shape(%2262)
  %2265 : Tensor = onnx::Constant[value={-1}]()
  %2266 : Tensor = onnx::Concat[axis=0](%2265, %2259)
  %2267 : Tensor = onnx::Reshape(%2263, %2266)
  %2268 : Tensor = onnx::Concat[axis=0](%2264, %2259)
  %2269 : Float(1, 2795, 4) = onnx::Reshape(%2267, %2268) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:386:0
  %2270 : Tensor = onnx::Constant[value={0}]()
  %2271 : Float(2795, 4) = onnx::Gather[axis=0](%2269, %2270) # /home/lahaidar/lara_pytorch/torch/tensor.py:462:0
  %2272 : Tensor = onnx::Constant[value={0}]()
  %2273 : Float(2795) = onnx::Gather[axis=0](%2237, %2272) # /home/lahaidar/lara_pytorch/torch/tensor.py:462:0
  %2274 : Tensor = onnx::Constant[value={0}]()
  %2275 : Long(2795) = onnx::Gather[axis=0](%2252, %2274) # /home/lahaidar/lara_pytorch/torch/tensor.py:462:0
  %2276 : Tensor = onnx::Constant[value={1}]()
  %2277 : Tensor = onnx::Constant[value={0}]()
  %2278 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2279 : Tensor = onnx::Constant[value={2}]()
  %2280 : Float(2795, 2) = onnx::Slice(%2271, %2277, %2278, %2276, %2279) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:112:0
  %2281 : Tensor = onnx::Constant[value={1}]()
  %2282 : Tensor = onnx::Constant[value={1}]()
  %2283 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2284 : Tensor = onnx::Constant[value={2}]()
  %2285 : Float(2795, 2) = onnx::Slice(%2271, %2282, %2283, %2281, %2284) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:113:0
  %2290 : Float(2795, 2) = onnx::Clip(%2280, %2934, %2935) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:115:0
  %2295 : Float(2795, 2) = onnx::Clip(%2285, %2936, %2937) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:116:0
  %2296 : Tensor = onnx::Unsqueeze[axes=[2]](%2290)
  %2297 : Tensor = onnx::Unsqueeze[axes=[2]](%2295)
  %2298 : Float(2795, 2, 2) = onnx::Concat[axis=2](%2296, %2297) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:117:0
  %2299 : Tensor = onnx::Shape(%2271)
  %2300 : Tensor = onnx::Constant[value={0}]()
  %2301 : Long() = onnx::Gather[axis=0](%2299, %2300) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:118:0
  %2302 : Tensor = onnx::Shape(%2271)
  %2303 : Tensor = onnx::Constant[value={1}]()
  %2304 : Long() = onnx::Gather[axis=0](%2302, %2303) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:118:0
  %2305 : Tensor = onnx::Unsqueeze[axes=[0]](%2301)
  %2306 : Tensor = onnx::Unsqueeze[axes=[0]](%2304)
  %2307 : Tensor = onnx::Concat[axis=0](%2305, %2306)
  %2308 : Float(2795, 4) = onnx::Reshape(%2298, %2307) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2309 : Tensor = onnx::Constant[value={2}]()
  %2310 : Float(2795) = onnx::Gather[axis=1](%2308, %2309) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2311 : Tensor = onnx::Constant[value={0}]()
  %2312 : Float(2795) = onnx::Gather[axis=1](%2308, %2311) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2313 : Float(2795) = onnx::Sub(%2310, %2312) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2314 : Tensor = onnx::Constant[value={3}]()
  %2315 : Float(2795) = onnx::Gather[axis=1](%2308, %2314) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2316 : Tensor = onnx::Constant[value={1}]()
  %2317 : Float(2795) = onnx::Gather[axis=1](%2308, %2316) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2318 : Float(2795) = onnx::Sub(%2315, %2317) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:93:0
  %2319 : Float() = onnx::Constant[value={0.001}]()
  %2320 : Tensor = onnx::Less(%2313, %2319)
  %2321 : Bool(2795) = onnx::Not(%2320) # /home/lahaidar/lara_pytorch/torch/tensor.py:28:0
  %2322 : Float() = onnx::Constant[value={0.001}]()
  %2323 : Tensor = onnx::Less(%2318, %2322)
  %2324 : Bool(2795) = onnx::Not(%2323) # /home/lahaidar/lara_pytorch/torch/tensor.py:28:0
  %2325 : Tensor = onnx::Cast[to=9](%2321)
  %2326 : Tensor = onnx::Cast[to=9](%2324)
  %2327 : Tensor = onnx::And(%2325, %2326)
  %2328 : Bool(2795) = onnx::Cast[to=9](%2327) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:94:0
  %2329 : Tensor = onnx::NonZero(%2328)
  %2330 : Long(2782, 1) = onnx::Transpose[perm=[1, 0]](%2329) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:95:0
  %2331 : Long(2782) = onnx::Squeeze[axes=[1]](%2330) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:95:0
  %2332 : Long(2782) = onnx::Cast[to=7](%2331) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:393:0
  %2333 : Float(2782, 4) = onnx::Gather[axis=0](%2308, %2332) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:393:0
  %2334 : Long(2782) = onnx::Cast[to=7](%2332) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:393:0
  %2335 : Float(2782) = onnx::Gather[axis=0](%2273, %2334) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:393:0
  %2336 : Long(2782) = onnx::Cast[to=7](%2334) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:393:0
  %2337 : Long(2782) = onnx::Gather[axis=0](%2275, %2336) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:393:0
  %2338 : Float() = onnx::ReduceMax[keepdims=0](%2333) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:73:0
  %2339 : Float(2782) = onnx::Cast[to=1](%2337) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:74:0
  %2340 : Float() = onnx::Constant[value={1}]()
  %2341 : Float() = onnx::Add(%2338, %2340)
  %2342 : Float(2782) = onnx::Mul(%2339, %2341) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:75:0
  %2343 : Float(2782, 1) = onnx::Unsqueeze[axes=[1]](%2342) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:75:0
  %2344 : Float(2782, 4) = onnx::Add(%2333, %2343) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:75:0
  %2345 : Tensor = onnx::Unsqueeze[axes=[0]](%2344)
  %2346 : Tensor = onnx::Unsqueeze[axes=[0]](%2335)
  %2347 : Tensor = onnx::Unsqueeze[axes=[0]](%2346)
  %2348 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2349 : Tensor = onnx::Constant[value={0.7}]()
  %2350 : Tensor = onnx::NonMaxSuppression(%2345, %2347, %2348, %2349)
  %2351 : Tensor = onnx::Constant[value={2}]()
  %2352 : Tensor = onnx::Gather[axis=1](%2350, %2351)
  %2353 : Long(1119) = onnx::Squeeze[axes=[1]](%2352) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:36:0
  %2354 : Tensor = onnx::Constant[value={0}]()
  %2355 : Tensor = onnx::Constant[value={0}]()
  %2356 : Tensor = onnx::Constant[value={1000}]()
  %2357 : Tensor = onnx::Constant[value={1}]()
  %2358 : Long(1000) = onnx::Slice(%2353, %2355, %2356, %2354, %2357) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:397:0
  %2359 : Long(1000) = onnx::Cast[to=7](%2358) # /home/lahaidar/clean_forsk_vision/torchvision/models/detection/rpn.py:398:0
  %2360 : Float(1000, 4) = onnx::Gather[axis=0](%2333, %2359) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2361 : Float(1000, 4) = onnx::Concat[axis=0](%2360) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:124:0
  %2362 : Tensor = onnx::Constant[value={1}]()
  %2363 : Tensor = onnx::Constant[value={0}]()
  %2364 : Tensor = onnx::Constant[value={1}]()
  %2365 : Tensor = onnx::Constant[value={1}]()
  %2366 : Float(1000, 1) = onnx::Slice(%2360, %2363, %2364, %2362, %2365) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:129:0
  %2367 : Tensor = onnx::Shape(%2366)
  %2368 : Float(1000, 1) = onnx::ConstantOfShape[value={0}](%2367) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:129:0
  %2369 : Float(1000, 1) = onnx::Concat[axis=0](%2368) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:131:0
  %rois : Float(1000, 5) = onnx::Concat[axis=1](%2369, %2361) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:134:0
  %2371 : Tensor = onnx::Constant[value={2}]()
  %2372 : Float(1000) = onnx::Gather[axis=1](%2360, %2371) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2373 : Tensor = onnx::Constant[value={0}]()
  %2374 : Float(1000) = onnx::Gather[axis=1](%2360, %2373) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2375 : Float(1000) = onnx::Sub(%2372, %2374) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2376 : Tensor = onnx::Constant[value={3}]()
  %2377 : Float(1000) = onnx::Gather[axis=1](%2360, %2376) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2378 : Tensor = onnx::Constant[value={1}]()
  %2379 : Float(1000) = onnx::Gather[axis=1](%2360, %2378) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2380 : Float(1000) = onnx::Sub(%2377, %2379) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2381 : Float(1000) = onnx::Mul(%2375, %2380) # /home/lahaidar/clean_forsk_vision/torchvision/ops/boxes.py:133:0
  %2382 : Float(1000) = onnx::Concat[axis=0](%2381) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:70:0
  %2383 : Float(1000) = onnx::Sqrt(%2382) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:70:0
  %2384 : Float() = onnx::Constant[value={224}]()
  %2385 : Float(1000) = onnx::Div(%2383, %2384)
  %2386 : Tensor = onnx::Log(%2385)
  %2387 : Float(1) = onnx::Constant[value={0.693147}]()
  %2388 : Float(1000) = onnx::Div(%2386, %2387) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:73:0
  %2389 : Float() = onnx::Constant[value={4}]()
  %2390 : Float(1000) = onnx::Add(%2388, %2389)
  %2391 : Float() = onnx::Constant[value={1e-06}]()
  %2392 : Float(1000) = onnx::Add(%2390, %2391)
  %2393 : Float(1000) = onnx::Floor(%2392) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:73:0
  %2398 : Float(1000) = onnx::Clip(%2393, %2938, %2939) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:74:0
  %2399 : Long(1000) = onnx::Cast[to=7](%2398) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:75:0
  %2400 : Long() = onnx::Constant[value={2}]()
  %2401 : Long(1000) = onnx::Sub(%2399, %2400)
  %2402 : Long(1000) = onnx::Cast[to=7](%2401) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:75:0
  %2403 : Tensor = onnx::Shape(%rois)
  %2404 : Tensor = onnx::Constant[value={0}]()
  %2405 : Long() = onnx::Gather[axis=0](%2403, %2404) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:207:0
  %2406 : Tensor = onnx::Shape(%1458)
  %2407 : Tensor = onnx::Constant[value={1}]()
  %2408 : Long() = onnx::Gather[axis=0](%2406, %2407) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:210:0
  %2411 : Tensor = onnx::Unsqueeze[axes=[0]](%2405)
  %2412 : Tensor = onnx::Unsqueeze[axes=[0]](%2408)
  %2415 : Tensor = onnx::Concat[axis=0](%2411, %2412, %2940, %2941)
  %2416 : Float(1000, 256, 7, 7) = onnx::ConstantOfShape[value={0}](%2415) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:216:0
  %2417 : Long() = onnx::Constant[value={0}]()
  %2418 : Bool(1000) = onnx::Equal(%2402, %2417) # /home/lahaidar/lara_pytorch/torch/tensor.py:28:0
  %2419 : Tensor = onnx::NonZero(%2418)
  %2420 : Long(946, 1) = onnx::Transpose[perm=[1, 0]](%2419) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:225:0
  %2421 : Long(946) = onnx::Squeeze[axes=[1]](%2420) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:225:0
  %2422 : Long(946) = onnx::Cast[to=7](%2421) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:226:0
  %2423 : Float(946, 5) = onnx::Gather[axis=0](%rois, %2422) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:226:0
  %2424 : Tensor = onnx::Constant[value={0}]()
  %2425 : Tensor = onnx::Gather[axis=1](%2423, %2424)
  %2426 : Tensor = onnx::Squeeze[axes=[1]](%2425)
  %2427 : Tensor = onnx::Cast[to=7](%2426)
  %2428 : Tensor = onnx::Constant[value= 1  2  3  4 [ CPULongType{4} ]]()
  %2429 : Tensor = onnx::Gather[axis=1](%2423, %2428)
  %2430 : Float(946, 256, 7, 7) = onnx::RoiAlign[output_height=7, output_width=7, sampling_ratio=2, spatial_scale=0.25](%1458, %2429, %2427) # /home/lahaidar/clean_forsk_vision/torchvision/ops/roi_align.py:41:0
  %2431 : Float(946, 256, 7, 7) = onnx::Cast[to=1](%2430) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:234:0
  %2432 : Long(946) = onnx::Cast[to=7](%2422) # /home/lahaidar/clean_forsk_vision/torchvision/ops/poolers.py:235:0
  %2433 : Tensor = onnx::Constant[value={-1}]()
  %2434 : Tensor = onnx::Reshape(%2432, %2433)
  %2435 : Tensor = onnx::Shape(%2434)
  %2436 : Tensor = onnx::Unsqueeze[axes=[-1]](%2434)
  %2437 : Tensor = onnx::Shape(%2416)
  %2438 : Tensor = onnx::Constant[value={0}]()
  %2439 : Tensor = onnx::Constant[value={1}]()
  %2440 : Tensor = onnx::Constant[value={9223372036854775807}]()
  %2441 : Tensor = onnx::Slice(%2437, %2439, %2440, %2438)
  %2442 : Tensor = onnx::Concat[axis=0](%2435, %2441)
  %2443 : Tensor = onnx::Reshape(%2431, %2442)
  %res : Float(1000, 256, 7, 7) = onnx::ScatterND(%2416, %2436, %2443)
  return (%res, %rois)

